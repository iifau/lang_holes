-paradigm: poly_ANUM
 -flex: .<.>
  gramm: 
  paradigm: poly_INT_incorp
 -flex: .рэ<.>//.рэй<.>
  gramm: adj
  gloss: ADJ
 paradigm: S_number
 -flex: <.>.рэ<.>//<.>.рэй<.>
  gramm: adj
  gloss: ADJ
 paradigm: S_possess

-paradigm: poly_???
 -flex: .<.>
  gramm: 
 paradigm: S_number

-paradigm: zero
 -flex: .
  gramm: 

-paradigm: poly_PTCL
 -flex: .
  gramm: 

-paradigm: poly_N
 -flex: <.>.<.>
  gramm: 
  paradigm: S_possess
  paradigm: S_neg
 -flex: .рэ<.>//.рэй<.>
  gramm: adj
  gloss: ADJ
  paradigm: S_number
  regex-stem: ^[.,<>0-9]*(непэ|тыгъосэ|неущ)[.,<>0-9]*$
 -flex: <.>.рэ<.>//<.>.рэй<.>
  gramm: adj
  gloss: ADJ
  paradigm: S_possess
  regex-stem: ^[.,<>0-9]*(непэ|тыгъосэ|неущ)[.,<>0-9]*$
 -flex: <.>.<.>
  gramm: NtoV
  paradigm: V_minus_9_intr_possess
  paradigm: V_minus_9_intr_NtoV
# -flex: <.>.<.>
#  gramm: NtoV
#  paradigm: V_minus_9_intr
#  paradigm: V_minus_8_intr
#  paradigm: V_minus_6_intr
#  paradigm: V_minus_5_intr
#  paradigm: V_minus_1
 -flex: .<.>
  gramm: 
  paradigm: S_aug
  paradigm: S_car
  paradigm: S_incorp
  paradigm: S_nmlz
 -flex: <0,2>.<.>
  paradigm: S_number

-paradigm: poly_A
 -flex: <.>.<.>
  gramm: 
  paradigm: S_possess
  paradigm: S_neg
  paradigm: S_possess_NtoV
 -flex: <.>.<.>
  gramm: NtoV
  paradigm: V_minus_9_intr
  paradigm: V_minus_8_intr
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  paradigm: V_minus_1
 -flex: .<.>
  gramm: 
  paradigm: S_aug
  paradigm: S_car
  paradigm: A_int
  paradigm: S_incorp
  paradigm: S_nmlz
  paradigm: poly_INT_incorp
 -flex: <0,1,2>.<.>
  paradigm: S_number

-paradigm: poly_N_inalien
 -flex: <.>.<.>
  gramm: 
  paradigm: S_possess_inalien
  paradigm: S_possess
  paradigm: S_neg
 -flex: .<.>
  gramm: 
  paradigm: S_aug
  paradigm: S_car
  paradigm: S_incorp
  paradigm: S_nmlz
 -flex: <0,2>.<.>
  paradigm: S_number

-paradigm: poly_N_inalien_dir
 -flex: къы.<.>
  gramm: dir
  gloss: DIR
  paradigm: S_aug
  paradigm: S_car
  paradigm: S_incorp
  paradigm: S_nmlz
  paradigm: S_number

-paradigm: S_possess
 -flex: .з|и.<.>
  gramm: p.rel,poss
  gloss: REL.P|POSS
 -flex: .с|и.<.>
  gramm: p.1sg,poss
  gloss: 1SG.P|POSS
 -flex: .у|и.<.>
  gramm: p.2sg,poss
  gloss: 2SG.P|POSS
 -flex: .и.<.>
  gramm: p.3sg,poss
  gloss: POSS
 -flex: .т|и.<.>
  gramm: p.1pl,poss
  gloss: 1PL.P|POSS
 -flex: .шъу|и.<.>
  gramm: p.2pl,poss
  gloss: 2PL.P|POSS
 -flex: .я.<.>
  gramm: p.3pl,poss
  gloss: 3PL.P+POSS
 -flex: .зэ.<.>
  gramm: p.rec
  gloss: REC.P
  regex-gramm: ^~(A|APRO),.*$
 -flex: .з|и|мы.<.>
  gramm: p.rel,poss,neg
  gloss: REL.P|POSS|NEG
 -flex: .с|и|мы.<.>
  gramm: p.1sg,poss,neg
  gloss: 1SG.P|POSS|NEG
 -flex: .у|и|мы.<.>
  gramm: p.2sg,poss,neg
  gloss: 2SG.P|POSS|NEG
 -flex: .и|мы.<.>
  gramm: p.3sg,poss,neg
  gloss: POSS|NEG
 -flex: .т|и|мы.<.>
  gramm: p.1pl,poss,neg
  gloss: 1PL.P|POSS|NEG
 -flex: .шъу|и|мы.<.>
  gramm: p.2pl,poss,neg
  gloss: 2PL.P|POSS|NEG
 -flex: .я|мы.<.>
  gramm: p.3pl,poss,neg
  gloss: 3PL.P+POSS|NEG
 paradigm: S_aug
 paradigm: S_car
 paradigm: S_incorp
 paradigm: S_nmlz
 paradigm: S_number

-paradigm: S_possess_NtoV
 -flex: .з|и.<.>
  gramm: p.rel,poss
  gloss: REL.P|POSS
 -flex: .с|и.<.>
  gramm: p.1sg,poss
  gloss: 1SG.P|POSS
 -flex: .у|и.<.>
  gramm: p.2sg,poss
  gloss: 2SG.P|POSS
 -flex: .и.<.>
  gramm: p.3sg,poss
  gloss: POSS
 -flex: .ри.<.>
  gramm: p.3sg,poss
  gloss: POSS
  regex-prev: .*сы[<>.]*$
 -flex: .т|и.<.>
  gramm: p.1pl,poss
  gloss: 1PL.P|POSS
 -flex: .шъу|и.<.>
  gramm: p.2pl,poss
  gloss: 2PL.P|POSS
 -flex: .я.<.>
  gramm: p.3pl,poss
  gloss: 3PL.P+POSS
 -flex: .ря.<.>
  gramm: p.3pl,poss
  gloss: 3PL.P+POSS
  regex-prev: .*сы[<>.]*$
 -flex: .з|и|мы.<.>
  gramm: p.rel,poss,neg
  gloss: REL.P|POSS|NEG
 -flex: .с|и|мы.<.>
  gramm: p.1sg,poss,neg
  gloss: 1SG.P|POSS|NEG
 -flex: .у|и|мы.<.>
  gramm: p.2sg,poss,neg
  gloss: 2SG.P|POSS|NEG
 -flex: .и|мы.<.>
  gramm: p.3sg,poss,neg
  gloss: POSS|NEG
 -flex: .ри|мы.<.>
  gramm: p.3sg,poss,neg
  gloss: POSS|NEG
  regex-prev: .*сы[<>.]*$
 -flex: .т|и|мы.<.>
  gramm: p.1pl,poss,neg
  gloss: 1PL.P|POSS|NEG
 -flex: .шъу|и|мы.<.>
  gramm: p.2pl,poss,neg
  gloss: 2PL.P|POSS|NEG
 -flex: .я|мы.<.>
  gramm: p.3pl,poss,neg
  gloss: 3PL.P+POSS|NEG
 -flex: .ря|мы.<.>
  gramm: p.3pl,poss,neg
  gloss: 3PL.P+POSS|NEG
  regex-prev: .*сы[<>.]*$
 paradigm: S_aug_NtoV
 paradigm: S_car_NtoV
 paradigm: S_incorp_NtoV
 paradigm: S_number_NtoV
 paradigm: S_nmlz
 paradigm: V_nmlz

-paradigm: S_possess_nmlz
 -flex: .з|и<.>.<.>
  gramm: p.rel,poss
  gloss: REL.P|POSS
 -flex: .с|и<.>.<.>
  gramm: p.1sg,poss
  gloss: 1SG.P|POSS
 -flex: .у|и<.>.<.>
  gramm: p.2sg,poss
  gloss: 2SG.P|POSS
 -flex: .и<.>.<.>
  gramm: p.3sg,poss
  gloss: POSS
 -flex: .т|и<.>.<.>
  gramm: p.1pl,poss
  gloss: 1PL.P|POSS
 -flex: .шъу|и<.>.<.>
  gramm: p.2pl,poss
  gloss: 2PL.P|POSS
 -flex: .я<.>.<.>
  gramm: p.3pl,poss
  gloss: 3PL.P+POSS
 paradigm: V_minus_8_intr
 paradigm: V_minus_6_intr
 paradigm: V_minus_5_intr
 paradigm: V_minus_2_3_initial
 paradigm: V_minus_1

-paradigm: S_neg
 -flex: .мы.<.>
  gramm: neg
  gloss: NEG
 paradigm: S_aug
 paradigm: S_car
 paradigm: S_nmlz
 paradigm: S_incorp
 paradigm: S_number

-paradigm: V_possess
 -flex: з|и.<.>
  gramm: p.rel,poss
  gloss: REL.P|POSS
 -flex: с|и.<.>
  gramm: p.1sg,poss
  gloss: 1SG.P|POSS
 -flex: у|и.<.>
  gramm: p.2sg,poss
  gloss: 2SG.P|POSS
 -flex: и.<.>
  gramm: p.3sg,poss
  gloss: POSS
 -flex: т|и.<.>
  gramm: p.1pl,poss
  gloss: 1PL.P|POSS
 -flex: шъу|и.<.>
  gramm: p.2pl,poss
  gloss: 2PL.P|POSS
 -flex: я.<.>
  gramm: p.3pl,poss
  gloss: 3PL.P+POSS
 -flex: з|и|мы.<.>
  gramm: p.rel,poss,neg
  gloss: REL.P|POSS|NEG
 -flex: с|и|мы.<.>
  gramm: p.1sg,poss,neg
  gloss: 1SG.P|POSS|NEG
 -flex: у|и|мы.<.>
  gramm: p.2sg,poss,neg
  gloss: 2SG.P|POSS|NEG
 -flex: и|мы.<.>
  gramm: p.3sg,poss,neg
  gloss: POSS|NEG
 -flex: т|и|мы.<.>
  gramm: p.1pl,poss,neg
  gloss: 1PL.P|POSS|NEG
 -flex: шъу|и|мы.<.>
  gramm: p.2pl,poss,neg
  gloss: 2PL.P|POSS|NEG
 -flex: я|мы.<.>
  gramm: p.3pl,poss,neg
  gloss: 3PL.P+POSS|NEG
 -flex: ны.<.>
  gramm: dir
  gloss: DIR
 -flex: нэ|мы.<.>
  gramm: dir,neg
  gloss: DIR|NEG
  paradigm: S_cond
 paradigm: S_number
 paradigm: V_possess_neg
 paradigm: V_possess_q
 paradigm: V_plus_2

-paradigm: V_possess_neg
 -flex: .эп<.>//.эпы<.>
  gramm: neg,neg_ep
  gloss: NEG
 -flex: .п<.>//.пы<.>
  gramm: neg,neg_ep
  gloss: NEG
  regex-stem: .*[эе][<>.]*$
 paradigm: S_number

-paradigm: V_possess_q
 -flex: .а
  gramm: q
  gloss: Q
  regex-prev: .*й[<>.]*$

-paradigm: POSTN_possess
 -flex: .са.<.>
  gramm: p.1sg
  gloss: 1SG.PO
 -flex: .та.<.>
  gramm: p.1pl
  gloss: 1PL.PO
 -flex: .уа.<.>
  gramm: p.2sg
  gloss: 2SG.PO
 -flex: .шъуа.<.>
  gramm: p.2pl
  gloss: 2PL.PO
 -flex: .ы.<.>
  gramm: p.3sg
  gloss: 3SG.PO
 -flex: .а.<.>
  gramm: p.3pl
  gloss: 3PL.PO
 -flex: .я.<.>
  gramm: p.3pl
  gloss: 3PL.PO
  regex-lex: ^дэжь$
 paradigm: S_car
 paradigm: S_number

-paradigm: S_possess_inalien
 -flex: .зы.<.>
  gramm: p.rel
  gloss: REL.P
 -flex: .зэ.<.>
  gramm: p.rec
  gloss: REC.P
  regex-gramm: ^~(A|APRO),.*$
 -flex: .с.<.>
  gramm: p.1sg
  gloss: 1SG.P
  regex-stem: ^[.,<>0-9]*[аэикпстфхцчшлI].*
 -flex: .сы.<.>
  gramm: p.1sg
  gloss: 1SG.P
  regex-stem: ^[.,<>0-9]*[^аэикпстфхцчшлI.<>].*
# -flex: .са.<.>
#  gramm: p.1sg
#  gloss: 1SG.P
#  regex-lex: ^дэжь$
 -flex: .п.<.>
  gramm: p.2sg
  gloss: 2SG.P
  regex-stem: ^[.,<>0-9]*[уеаэиыокпстфхцчшлI].*
  regex-next: ^[.,<>0-9]*[^мгбздвж].*
 -flex: .у.<.>
  gramm: p.2sg
  gloss: 2SG.P
#  regex-stem: ^[.,<>0-9]*[^аэикпстфхцчшлI.<>].*
 -flex: .уа.<.>
  gramm: p.2sg
  gloss: 2SG.P
#  regex-stem: ^[.,<>0-9]*[^аэикпстфхцчшл.<>].*
 -flex: .ы.<.>
  gramm: p.3sg
  gloss: 3SG.P
 -flex: .т.<.>
  gramm: p.1pl
  gloss: 1PL.P
#  regex-stem: ^[.,<>0-9]*[аэикпстфхцчшлI].*
# -flex: .та.<.>
#  gramm: p.1pl
#  gloss: 1PL.P
#  regex-lex: ^дэжь$
 -flex: .ты.<.>
  gramm: p.1pl
  gloss: 1PL.P
  regex-stem: ^[.,<>0-9]*[^аэикпстфхцчшлI.<>].*
 -flex: .шъу.<.>
  gramm: p.2pl
  gloss: 2PL.P
# -flex: .шъуа.<.>
#  gramm: p.2pl
#  gloss: 2PL.P
#  regex-lex: ^дэжь$
 -flex: .жъу.<.>
  gramm: p.2pl
  gloss: 2PL.P
  regex-stem: ^[.,<>0-9]*[бвгджз].*
 -flex: .а.<.>
  gramm: p.3pl
  gloss: 3PL.P
 -flex: .я.<.>
  gramm: p.3pl
  gloss: 3PL.P
  regex-lex: ^дэжь$
 
 -flex: .зы|мы.<.>
  gramm: p.rel,neg
  gloss: REL.P|NEG
 -flex: .сы|мы.<.>
  gramm: p.1sg,neg
  gloss: 1SG.P|NEG
 -flex: .у|мы.<.>
  gramm: p.2sg,neg
  gloss: 2SG.P|NEG
 -flex: .ы|мы.<.>
  gramm: p.3sg,neg
  gloss: 3SG.P|NEG
 -flex: .ты|мы.<.>
  gramm: p.1pl,neg
  gloss: 1PL.P|NEG
 -flex: .шъу|мы.<.>
  gramm: p.2pl,neg
  gloss: 2PL.P|NEG
 -flex: .а|мы.<.>
  gramm: p.3pl,neg
  gloss: 3PL.P|NEG
 paradigm: S_aug
 paradigm: S_car
 paradigm: S_nmlz
 paradigm: S_incorp
 paradigm: S_number

-paradigm: S_aug
 -flex: <0,1>.шхо<.>//<0>.шху<.>
  gramm: aug
  gloss: AUG
  paradigm: S_number
  paradigm: S_incorp

-paradigm: S_aug_NtoV
 -flex: <0,1>.шхо<.>//<0>.шху<.>
  gramm: aug
  gloss: AUG
  paradigm: S_number_NtoV
  paradigm: S_incorp_NtoV

-paradigm: S_car
 -flex: <0,1>.нчъа<.>//<0>.нчъэ<.>
  gramm: car
  gloss: CAR
  paradigm: S_number
  paradigm: S_incorp

-paradigm: S_car_NtoV
 -flex: <0,1>.нчъа<.>//<0>.нчъэ<.>//<0,1>.нчъ<.>
  gramm: car
  gloss: CAR
  paradigm: S_number_NtoV
  paradigm: S_incorp_NtoV

-paradigm: A_int
 -flex: .кIэе<.>//.кIэй<.>
  gramm: int1
  gloss: INT1
 -flex: .кIай
  gramm: int1,alt_stem
  gloss: INT1
 -flex: .кIэя<.>//.кIае<.>
  gramm: int1,alt_stem
  gloss: INT1
 -flex: .бзэ<.>
  gramm: int2
  gloss: INT2
 -flex: .е<.>//.ей<.>
  gramm: int3
  gloss: INT3
 -flex: <0,1>.щэ<.>
  gramm: exc1
  gloss: EXC1
 -flex: <0,1>.щ<.>
  gramm: exc1
  gloss: EXC1
 -flex: <0>.ща<.>
  gramm: exc1,alt_stem
  gloss: EXC1
 -flex: <0,1>.Iо<.>//<0,1>.Iуэ<.>
  gramm: exc2
  gloss: EXC2
  regex-gramm: ^A.*$
 -flex: <0,1>.Iу
  gramm: exc2
  gloss: EXC2
  regex-gramm: ^A.*$
 -flex: <0>.Iуа<.>
  gramm: exc2,alt_stem
  gloss: EXC2
  regex-gramm: ^A.*$
 paradigm: S_number
 paradigm: S_incorp

-paradigm: S_nmlz
 -flex: <0,1>.пIэ<.>//<0,1>.пI<.>
  gramm: nmlz.loc
  gloss: NMLZ.LOC
 -flex: <0,1>.гъэ<.>//<0,1>.гъ<.>
  gramm: abstr
  gloss: ABSTR
 paradigm: S_number
 paradigm: S_incorp

-paradigm: S_incorp
 -flex: .и<.>
  gramm: 
  gloss: LNK
 -flex: .и|тIу<.>
  gramm: два,incorp,NUM
  gloss: LNK|два
 -flex: .и|щ<.>//.и|щы<.>
  gramm: три,incorp,NUM
  gloss: LNK|три
 -flex: .и|плI<.>//.и|плIы<.>
  gramm: четыре,incorp,NUM
  gloss: LNK|четыре
 -flex: .и|тф<.>//.и|тфы<.>
  gramm: пять,incorp,NUM
  gloss: LNK|пять
 -flex: .и|х<.>//.и|хы<.>
  gramm: шесть,incorp,NUM
  gloss: LNK|шесть
 -flex: .и|бл<.>//.и|блы<.>
  gramm: семь,incorp,NUM
  gloss: LNK|семь
 -flex: .и|бгъу<.>
  gramm: девять,incorp,NUM
  gloss: LNK|девять
 -flex: .и|пшI<.>//.и|пшIы<.>
  gramm: десять,incorp,NUM
  gloss: LNK|десять
 -flex: .и|шъэ<.>
  gramm: сто,incorp,NUM
  gloss: LNK|сто
 -flex: <0,1>.бэ<.>
  gramm: много,incorp
  gloss: много
 -flex: <0,1>.б<.>
  gramm: много,incorp
  gloss: много
  regex-stem: ^[.,<>0-9]*нахьы[.,<>0-9]*$
 -flex: <0,1>.кIэ<.>
  gramm: новый,incorp
  gloss: новый
 -flex: <0,1>.бгъэ<.>
  gramm: грудь,incorp
  gloss: грудь
 -flex: <0,1>.бзэ<.>
  gramm: язык,incorp
  gloss: язык
 -flex: <0,1>.гъо<.>
  gramm: рыжий,incorp
  gloss: рыжий
 -flex: <0,1>.шхъо<.>
  gramm: серый,incorp
  gloss: серый
 -flex: <0,1>.шъхьэ<.>
  gramm: голова,incorp
  gloss: голова
 -flex: <0,1>.шIэ<.>//<0,1>.шI<.>
  gramm: делать,incorp
  gloss: делать
 -flex: <0,1>.къо<.>
  gramm: сын,incorp
  gloss: сын
 -flex: <0,1>.тхъо<.>
  gramm: седой,incorp
  gloss: седой
 -flex: <0,1>.пэ<.>
  gramm: нос,incorp
  gloss: нос
 -flex: <0>.жъы<.>//<0>.жъ<.>
  gramm: старый,incorp
  gloss: старый
 -flex: <0>.бай<.>//<0>.баи<.>
  gramm: богатый,incorp
  gloss: богатый
 -flex: <0>.бгъу<.>
  gramm: бок,incorp
  gloss: бок
 -flex: <0>.гу<.>
  gramm: сердце,incorp
  gloss: сердце
 -flex: <0>.лIы<.>//<0>.лI<.>
  gramm: мужчина,incorp
  gloss: мужчина
 -flex: <0>.псы<.>//<0>.пс<.>
  gramm: вода,incorp
  gloss: вода
 -flex: <0>.пхъу<.>
  gramm: дочь,incorp
  gloss: дочь
 -flex: <0>.шы<.>//<0>.ш<.>
  gramm: брат,incorp
  gloss: брат
 -flex: <0>.шIу<.>
  gramm: добрый,incorp
  gloss: добрый
 -flex: <0>.ин<.>//<0>.ины<.>
  gramm: большой,incorp
  gloss: большой
 -flex: <0>.цIыкIу<.>
  gramm: маленький,incorp
  gloss: маленький
 -flex: <0>.фы<.>//<0>.ф<.>
  gramm: белый,incorp
  gloss: белый
 -flex: <0>.ныкъо<.>
  gramm: половина,incorp
  gloss: половина
 paradigm: S_number

-paradigm: S_incorp_NtoV
 -flex: .и|тIу<.>
  gramm: два,incorp,NUM
  gloss: LNK|два
 -flex: .и|щ<.>//.и|щы<.>
  gramm: три,incorp,NUM
  gloss: LNK|три
 -flex: .и|плI<.>//.и|плIы<.>
  gramm: четыре,incorp,NUM
  gloss: LNK|четыре
 -flex: .и|тф<.>//.и|тфы<.>
  gramm: пять,incorp,NUM
  gloss: LNK|пять
 -flex: .и|х<.>//.и|хы<.>
  gramm: шесть,incorp,NUM
  gloss: LNK|шесть
 -flex: .и|бл<.>//.и|блы<.>
  gramm: семь,incorp,NUM
  gloss: LNK|семь
 -flex: .и|бгъу<.>
  gramm: девять,incorp,NUM
  gloss: LNK|девять
 -flex: .и|пшI<.>//.и|пшIы<.>
  gramm: десять,incorp,NUM
  gloss: LNK|десять
 -flex: .и|шъэ<.>
  gramm: сто,incorp,NUM
  gloss: LNK|сто
 -flex: <0,1>.бэ<.>
  gramm: много,incorp
  gloss: много
 -flex: <0,1>.б<.>
  gramm: много,incorp
  gloss: много
  regex-stem: ^[.,<>0-9]*нахьы[.,<>0-9]*$
 -flex: <0,1>.кIэ<.>
  gramm: новый,incorp
  gloss: новый
 -flex: <0,1>.бгъэ<.>
  gramm: грудь,incorp
  gloss: грудь
 -flex: <0,1>.бзэ<.>
  gramm: язык,incorp
  gloss: язык
 -flex: <0,1>.гъо<.>
  gramm: рыжий,incorp
  gloss: рыжий
 -flex: <0,1>.шхъо<.>
  gramm: серый,incorp
  gloss: серый
 -flex: <0,1>.шъхьэ<.>
  gramm: голова,incorp
  gloss: голова
 -flex: <0,1>.шIэ<.>//<0,1>.шI<.>
  gramm: делать,incorp
  gloss: делать
 -flex: <0,1>.къо<.>
  gramm: сын,incorp
  gloss: сын
 -flex: <0,1>.тхъо<.>
  gramm: седой,incorp
  gloss: седой
 -flex: <0,1>.пэ<.>
  gramm: нос,incorp
  gloss: нос
 -flex: <0>.жъы<.>//<0>.жъ<.>
  gramm: старый,incorp
  gloss: старый
 -flex: <0>.бай<.>//<0>.баи<.>
  gramm: богатый,incorp
  gloss: богатый
 -flex: <0>.бгъу<.>
  gramm: бок,incorp
  gloss: бок
 -flex: <0>.гу<.>
  gramm: сердце,incorp
  gloss: сердце
 -flex: <0>.лIы<.>//<0>.лI<.>
  gramm: мужчина,incorp
  gloss: мужчина
 -flex: <0>.псы<.>//<0>.пс<.>
  gramm: вода,incorp
  gloss: вода
 -flex: <0>.пхъу<.>
  gramm: дочь,incorp
  gloss: дочь
 -flex: <0>.шы<.>//<0>.ш<.>
  gramm: брат,incorp
  gloss: брат
 -flex: <0>.шIу<.>
  gramm: добрый,incorp
  gloss: добрый
 -flex: <0>.ин<.>//<0>.ины<.>
  gramm: большой,incorp
  gloss: большой
 -flex: <0>.цIыкIу<.>
  gramm: маленький,incorp
  gloss: маленький
 -flex: <0>.фы<.>//<0>.ф<.>
  gramm: белый,incorp
  gloss: белый
 -flex: <0>.ныкъо<.>
  gramm: половина,incorp
  gloss: половина
 paradigm: S_number_NtoV

-paradigm: poly_INT_incorp
 -flex: .дэдэ<.>
  gramm: именно,incorp
  gloss: именно
 paradigm: S_number

-paradigm: poly_N_famn
 -flex: .хэ<.>//.х<.>
  gramm: pl
  gloss: PL
  paradigm: case
  paradigm: additives
 -flex: .<.>
  gramm: sg
  paradigm: case
  paradigm: additives

-paradigm: poly_N_parents
 -flex: з|я.<.>
  gramm: p.rel,poss
  gloss: REL.P|POSS
 -flex: с|я.<.>
  gramm: p.1sg,poss
  gloss: 1SG.P|POSS
 -flex: у|я.<.>
  gramm: p.2sg,poss
  gloss: 2SG.P|POSS
 -flex: я.<.>
  gramm: p.3sg,poss
  gloss: POSS
 -flex: т|я.<.>
  gramm: p.1pl,poss
  gloss: 1PL.P|POSS
 -flex: шъу|я.<.>
  gramm: p.2pl,poss
  gloss: 2PL.P|POSS
 -flex: я.<.>
  gramm: p.3pl,poss
  gloss: 3PL.P+POSS
 paradigm: S_number
 paradigm: S_incorp

-paradigm: S_number
 -flex: .хэ<.>//.х<.>
  gramm: pl
  gloss: PL
  paradigm: case
  paradigm: additives
 -flex: .тхэ<.>//.тх<.>
  gramm: pl,apl
  gloss: APL
  paradigm: case
  paradigm: additives
 -flex: .дыхэ<.>//.дых<.>
  gramm: pl,apl
  gloss: APL
  paradigm: case
  paradigm: additives
 -flex: .<.>
  gramm: sg
  paradigm: case
  paradigm: additives
 -flex: .хэ<.>
  gramm: pl,NtoV
  gloss: PL
  paradigm: V_plus_2
  paradigm: V_plus_2_final
  paradigm: V_plus_4
  paradigm: V_plus_5_mod
 -flex: .х<.>
  gramm: pl,NtoV
  gloss: PL
  paradigm: V_plus_4
 -flex: .<.>
  gramm: sg,NtoV
  paradigm: V_plus_2
  paradigm: V_plus_2_final
  paradigm: V_plus_4
  paradigm: V_plus_5_mod

-paradigm: S_number_NtoV
 -flex: .хэ<.>//.х<.>
  gramm: pl
  gloss: PL
  paradigm: additives
  paradigm: V_plus_2
  paradigm: V_plus_2_final
  paradigm: V_plus_4
  paradigm: V_plus_5_mod
  paradigm: V_plus_5
 -flex: .<.>
  gramm: sg
  paradigm: additives
  paradigm: V_plus_2
  paradigm: V_plus_2_final
  paradigm: V_plus_4
  paradigm: V_plus_5_mod
  paradigm: V_plus_5

-paradigm: SPRO_number
 -flex: .дрэ|хэ<.>
  gramm: pl,другой
  gloss: другой|PL
  paradigm: case
  paradigm: additives
 -flex: .дрэ<.>
  gramm: sg,другой
  gloss: другой
  paradigm: case_PRO
  paradigm: additives
 -flex: .дрэ|м<.>
  gramm: sg,другой,obl
  gloss: другой|OBL
  paradigm: additives
 -flex: .дрэ|хэ|м<.>
  gramm: pl,другой,obl
  gloss: другой|PL|OBL
  paradigm: additives
 -flex: .дырэ|хэ<.>
  gramm: pl,другой
  gloss: другой|PL
  paradigm: case
  paradigm: additives
 -flex: .дырэ<.>
  gramm: sg,другой
  gloss: другой
  paradigm: case_PRO
  paradigm: additives
 -flex: .дырэ|м<.>
  gramm: sg,другой,obl
  gloss: другой|OBL
  paradigm: additives
 -flex: .дырэ|хэ|м<.>
  gramm: pl,другой,obl
  gloss: другой|PL|OBL
  paradigm: additives
 -flex: .хэ<.>
  gramm: pl
  gloss: PL
  paradigm: case
  paradigm: additives
 -flex: .<.>
  gramm: sg
  paradigm: case_PRO
  paradigm: additives

-paradigm: case
 -flex: .р<.>
  gramm: abs
  gloss: ABS
 -flex: .м<.>
  gramm: obl
  gloss: OBL
 -flex: .мэ<.>
  gramm: obl,pl
  gloss: OBL.PL
 -flex: .м|кIэ<.>//.м|кIэрэ<.>
  gramm: obl,ins
  gloss: OBL|INS
 -flex: .м|кI<.>//.м|кIэр.<.>
  gramm: obl,ins
  gloss: OBL|INS
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .м|рэ|кIэ<.>//.м|рэ|кIэрэ<.>
  gramm: obl,ins,coord
  gloss: OBL|COORD|INS
 -flex: .м|рэ|кI<.>
  gramm: obl,ins,coord
  gloss: OBL|COORD|INS
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .кIэ<.>//.кIэрэ<.>
  gramm: ins
  gloss: INS
 -flex: .кI<.>//.кIэр<.>
  gramm: ins
  gloss: INS
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .хьа<.>
  gramm: purp
  gloss: PURP
  regex-next: ^(.*[эео][^ыаяэео]*|[.,<>0-9]*гъ[.,<>0-9]*)$
 -flex: .хьэ<.>
  gramm: purp
  gloss: PURP
 -flex: .эу<.>
  gramm: adv
  gloss: ADV
 -flex: .у<.>    # эта штука проверяет предыдущую непустую флексию в деривационной цепочке, а эта флексия может быть префиксом вообще
  gramm: adv
  gloss: ADV
  regex-prev: .*((?<!гъ)э|[ое])[.,<>0-9]*$
 -flex: .у<.>
  gramm: adv
  gloss: ADV
  regex-stem: .*[оэе][.,<>0-9]*$
  regex-prev: ^(\.[^.]*\.|.*\.<\.>)$
 -flex: .м|джэ<.>
  gramm: obl,ins,dial
  gloss: OBL|INS
 paradigm: additives_case

-paradigm: S_cond
 -flex: .мэ
  gramm: cond
  gloss: COND
 -flex: .м|и
  gramm: cond,add
  gloss: COND|ADD

-paradigm: case_PRO
 -flex: .р<.>
  gramm: abs
  gloss: ABS
 -flex: .щ<.>//.й<.>
  gramm: obl
  gloss: OBL
 -flex: .м<.>
  gramm: obl
  gloss: OBL
  regex-lex: ^горэ$|^сыд$|^хэт$
 -flex: .мэ<.>
  gramm: obl,pl
  gloss: OBL.PL
 -flex: .м|кIэ<.>//.щ|кIэ<.>//.й|кIэ<.>//.м|кIэрэ<.>//.щ|кIэрэ<.>//.й|кIэрэ<.>
  gramm: obl,ins
  gloss: OBL|INS
 -flex: .м|кI<.>//.щ|кI<.>//.й|кI<.>//.м|кIэр<.>//.щ|кIэр<.>//.й|кIэр<.>
  gramm: obl,ins
  gloss: OBL|INS
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .м|рэ|кIэ<.>//.щ|рэ|кIэ<.>//.й|рэ|кIэ<.>//.м|рэ|кIэрэ<.>//.щ|рэ|кIэрэ<.>//.й|рэ|кIэрэ<.>
  gramm: obl,ins,coord
  gloss: OBL|COORD|INS
 -flex: .м|рэ|кI<.>//.щ|рэ|кI<.>//.й|рэ|кI<.>//.м|рэ|кIэр<.>//.щ|рэ|кIэр<.>//.й|рэ|кIэр<.>
  gramm: obl,ins,coord
  gloss: OBL|COORD|INS
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .эу<.>
  gramm: adv
  gloss: ADV
 -flex: .у<.>    # эта штука проверяет предыдущую непустую флексию в деривационной цепочке, а эта флексия может быть префиксом вообще
  gramm: adv
  gloss: ADV
  regex-prev: .*((?<!гъ)э|[ое])[.,<>0-9]*$
 -flex: .у<.>
  gramm: adv
  gloss: ADV
  regex-stem: .*[оэе][.,<>0-9]*$
  regex-prev: ^(\.[^.]*\.|.*\.<\.>)$
 -flex: .м|джэ<.>
  gramm: obl,ins,dial
  gloss: OBL|INS
 paradigm: additives_case

-paradigm: additives
 -flex: .
  gramm: 
 -flex: .и
  gramm: add
  gloss: ADD
  regex-prev: .*[^аэыеяоё<>.][.,<>0-9]*$
 -flex: .и
  gramm: add
  gloss: ADD
  regex-prev: .*\.<\.>$
  regex-stem: .*[^аэыеяоё<>.][.,<>0-9]*$
 -flex: .ри
  gramm: add
  gloss: ADD
  regex-prev: .*[аэыеяоё][.,<>0-9]*$
 -flex: .рэ
  gramm: coord
  gloss: COORD
 -flex: .рэ|кIэ
  gramm: ins,coord
  gloss: COORD|INS
 -flex: .ти
  gramm: cs
  gloss: CS
 -flex: .шъ//.шъы//.шъыры
  gramm: cs2
  gloss: CS2
 -flex: .шъы|ри
  gramm: cs2,add
  gloss: CS2|ADD
 -flex: .а
  gramm: q
  gloss: Q
 -flex: .ба
  gramm: emp
  gloss: EMP

-paradigm: additives_case
 -flex: .
  gramm: 
 -flex: .и
  gramm: add
  gloss: ADD
  regex-prev: .*[^аэыеяоё<>.][.,<>0-9]*$
 -flex: .ри
  gramm: add
  gloss: ADD
  regex-prev: .*[аэыеяоё][.,<>0-9]*$
 -flex: .рэ
  gramm: coord
  gloss: COORD
 -flex: .рэ|кIэ
  gramm: ins,coord
  gloss: COORD|INS
 -flex: .ти
  gramm: cs
  gloss: CS

-paradigm: poly_APRO
 -flex: .<.>
  gramm: 
  paradigm: SPRO_number
  paradigm: poly_INT_incorp
 -flex: <0>.ры
  gramm: pred
  gloss: PRED
 -flex: <0>.ры<.>
  gramm: pred
  gloss: PRED
  paradigm: V_minus_9_intr_NtoV
  #paradigm: poly_V_intr
  paradigm: additives
 -flex: .р<.>
  gramm: pred
  gloss: PRED
  paradigm: poly_INT_incorp
 -flex: .р<.>
  gramm: pred
  gloss: PRED
  regex-next: ^[.,<>0-9]*[мтаоуыиеэ].*
  paradigm: V_plus_2
  paradigm: V_plus_2_final
  paradigm: additives
 -flex: <0>.ры|мы|ры<.>
  gramm: pred,neg
  gloss: PRED|NEG|PRED
  #paradigm: poly_V_intr

-paradigm: poly_NUM
 -flex: <.>.<.>
  gramm: 
  paradigm: S_possess
  paradigm: V_minus_9_intr_NtoV
 -flex: .<.>
  gramm: 
  paradigm: S_number
 -flex: я.энэрэ<.>//я.онэрэ<.>
  gramm: ord,adj
  gloss: ORD|ADJ
  paradigm: additives
 -flex: .э
  gramm: mult
  gloss: MULT
  paradigm: zero

-paradigm: poly_NUM_o
 -flex: я.онэрэ<.>
  gramm: ord,adj
  gloss: ORD|ADJ
  paradigm: additives
 -flex: .о
  gramm: mult
  gloss: MULT
  paradigm: zero

-paradigm: poly_CONJ
 -flex: .
  gramm: 

-paradigm: poly_ADV
 -flex: <.>.<.>
  gramm: 
  paradigm: S_possess_inalien
 -flex: .<.>
  gramm: 
  paradigm: S_number
  paradigm: poly_INT_incorp

-paradigm: poly_NPRO
 -flex: .<.>
  gramm: 
  paradigm: SPRO_number
  paradigm: poly_INT_incorp
 -flex: и.<.>
  gramm: poss
  gloss: POSS
  paradigm: SPRO_number
 -flex: .ры<.>
  gramm: pred
  gloss: PRED
  paradigm: V_minus_9_intr_NtoV
  paradigm: V_plus_3
  paradigm: additives
  #paradigm: poly_V_intr
# -flex: .р<.>
#  gramm: pred
#  gloss: PRED
#  regex-gramm: ^NPRO.*$
#  paradigm: case_PRO
#  paradigm: additives
 -flex: .р|эп<.>
  gramm: pred,neg,neg_ep
  gloss: PRED|NEG
  regex-gramm: ^NPRO.*$
  paradigm: additives_case
 -flex: .р<.>
  gramm: pred
  gloss: PRED
  paradigm: poly_INT_incorp
 -flex: .р<.>
  gramm: pred
  gloss: PRED
  regex-next: ^[.,<>0-9]*[мтаоуыиеэ].*
  paradigm: V_plus_2
  paradigm: V_plus_2_final
 -flex: <.>.ры|мы|ры<.>
  gramm: pred,neg
  gloss: PRED|NEG|PRED
  paradigm: poly_V_intr
 -flex: <.>.<.>
  gramm: NtoV
  paradigm: V_minus_9_intr_NtoV

-paradigm: poly_POSTN
 -flex: <.>.<.>
  gramm: 
  paradigm: POSTN_possess
 -flex: .<.>
  gramm: 
  paradigm: S_number

-paradigm: poly_POST
 -flex: <.>.<.>
  gramm: 
  paradigm: S_possess_inalien
 -flex: .<.>
  gramm: 
  paradigm: S_number

-paradigm: poly_V_intr
 -flex: <.>.<.>
  gramm: 
# paradigm: S_possess_nmlz
  paradigm: V_minus_9_intr
  paradigm: V_minus_8_intr
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  paradigm: V_minus_4_intr
  paradigm: V_minus_2_3_initial
  paradigm: V_minus_1
 -flex: <.>.<.>
  gramm: 
  paradigm: V_minus_1_empty
  regex-prev: .*ры.*
 -flex: .<.>
  gramm: 
  paradigm: V_plus_1

-paradigm: poly_V_tr
 -flex: <.>.<.>
  gramm: 
# paradigm: S_possess_nmlz
  paradigm: V_minus_9
  paradigm: V_minus_8
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
  paradigm: V_minus_2_3_initial
  paradigm: V_minus_1
 -flex: <.>.<.>
  gramm: 
  paradigm: V_minus_1_empty
  regex-prev: .*ры.*
 -flex: .<.>
  gramm: 
  paradigm: V_plus_1

-paradigm: V_minus_9           # absolutive prefixes
 -flex: .сы<.>.<.>
  gramm: 1.abs,sg.abs
  gloss: 1SG.ABS
  paradigm: V_minus_1_empty
 -flex: .с<.>.<.>
  gramm: 1.abs,sg.abs
  gloss: 1SG.ABS
  regex-next: ^[.,<>0-9]*[аяиеэ].*
 -flex: .с<.>.<.>
  gramm: 1.abs,sg.abs
  gloss: 1SG.ABS
  regex-stem: ^[.,<>0-9]*[аяие].*
 -flex: .ты<.>.<.>
  gramm: 1.abs,pl.abs
  gloss: 1PL.ABS
  paradigm: V_minus_1_empty
 -flex: .т<.>.<.>
  gramm: 1.abs,pl.abs
  gloss: 1PL.ABS
  regex-next: ^[.,<>0-9]*[аяиеэ].*
 -flex: .т<.>.<.>
  gramm: 1.abs,pl.abs
  gloss: 1PL.ABS
  regex-stem: ^[.,<>0-9]*[аяие].*
  paradigm: V_minus_1_empty
 -flex: .у<.>.<.>
  gramm: 2.abs,sg.abs
  gloss: 2SG.ABS
  paradigm: V_minus_1_empty
 -flex: .шъу<.>.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
  paradigm: V_minus_1_empty
 -flex: .жъу<.>.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .жъу<.>.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
  regex-stem: ^[.,<>0-9]*[бвгджз].*
  paradigm: V_minus_1_empty
 -flex: .зы<.>.<.>
  gramm: rfl.abs
  gloss: RFL.ABS
  paradigm: V_minus_1_empty
 -flex: .з<.>.<.>
  gramm: rfl.abs
  gloss: RFL.ABS
  regex-next: ^[.,<>0-9]*[аяиеэ].*
 -flex: .з<.>.<.>
  gramm: rfl.abs
  gloss: RFL.ABS
  regex-stem: ^[.,<>0-9]*[аяие].*
  paradigm: V_minus_1_empty
 paradigm: V_minus_8
 paradigm: V_minus_6
 paradigm: V_minus_5
 paradigm: V_minus_4
 paradigm: V_minus_2_3
 paradigm: V_minus_1


-paradigm: V_minus_9_jen           # absolutive prefixes for фае/пае
 -flex: сы<.>.<.>
  gramm: 1.abs,sg.abs
  gloss: 1SG.ABS
 -flex: с<.>.<.>
  gramm: 1.abs,sg.abs
  gloss: 1SG.ABS
  regex-next: ^[.,<>0-9]*[аяиеэ].*
 -flex: ты<.>.<.>
  gramm: 1.abs,pl.abs
  gloss: 1PL.ABS
 -flex: т<.>.<.>
  gramm: 1.abs,pl.abs
  gloss: 1PL.ABS
  regex-next: ^[.,<>0-9]*[аяиеэ].*
 -flex: у<.>.<.>
  gramm: 2.abs,sg.abs
  gloss: 2SG.ABS
 -flex: шъу<.>.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
 -flex: жъу<.>.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: зы<.>.<.>
  gramm: rfl.abs
  gloss: RFL.ABS
 -flex: з<.>.<.>
  gramm: rfl.abs
  gloss: RFL.ABS
  regex-next: ^[.,<>0-9]*[аяиеэ].*
 -flex: <.>.
  gramm:  
 paradigm: V_minus_6_jen

-paradigm: V_minus_9_intr      # absolutive prefixes
 -flex: .сы<.>.<.>
  gramm: 1.abs,sg.abs
  gloss: 1SG.ABS
  paradigm: V_minus_1_empty
 -flex: .с<.>.<.>
  gramm: 1.abs,sg.abs
  gloss: 1SG.ABS
  regex-next: ^[.,<>0-9]*[аяиеэ].*
 -flex: .с<.>.<.>
  gramm: 1.abs,sg.abs
  gloss: 1SG.ABS
  regex-stem: ^[.,<>0-9]*[аяие].*
  paradigm: V_minus_1_empty
 -flex: .ты<.>.<.>
  gramm: 1.abs,pl.abs
  gloss: 1PL.ABS
  paradigm: V_minus_1_empty
 -flex: .т<.>.<.>
  gramm: 1.abs,pl.abs
  gloss: 1PL.ABS
  regex-next: ^[.,<>0-9]*[аяиеэ].*
 -flex: .т<.>.<.>
  gramm: 1.abs,pl.abs
  gloss: 1PL.ABS
  regex-stem: ^[.,<>0-9]*[аяие].*
  paradigm: V_minus_1_empty
 -flex: .у<.>.<.>
  gramm: 2.abs,sg.abs
  gloss: 2SG.ABS
  paradigm: V_minus_1_empty
 -flex: .шъу<.>.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
  paradigm: V_minus_1_empty
 -flex: .жъу<.>.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .жъу<.>.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
  regex-stem: ^[.,<>0-9]*[бвгджз].*
  paradigm: V_minus_1_empty
 -flex: .зы<.>.<.>
  gramm: rfl.abs
  gloss: RFL.ABS
  paradigm: V_minus_1_empty
 -flex: .з<.>.<.>
  gramm: rfl.abs
  gloss: RFL.ABS
  regex-next: ^[.,<>0-9]*[аяиеэ].*
 -flex: .з<.>.<.>
  gramm: rfl.abs
  gloss: RFL.ABS
  regex-stem: ^[.,<>0-9]*[аяие].*
  paradigm: V_minus_1_empty
 paradigm: V_minus_8_intr
 paradigm: V_minus_6_intr
 paradigm: V_minus_5_intr
 paradigm: V_minus_2_3
 paradigm: V_minus_1
 paradigm: V_minus_1_empty
 paradigm: V_minus_4_intr
 paradigm: V_minus_2_3
 paradigm: V_minus_1

-paradigm: V_minus_9_intr_possess   # absolutive prefixes for nominal stems with a possessive prefix
 -flex: .сы<.>.<.>
  gramm: 1.abs,sg.abs
  gloss: 1SG.ABS
 -flex: .ты<.>.<.>
  gramm: 1.abs,pl.abs
  gloss: 1PL.ABS
 -flex: .у<.>.<.>
  gramm: 2.abs,sg.abs
  gloss: 2SG.ABS
  regex-next: ^[.,<>0-9]*[^.,<>0-9и].*
 -flex: .шъу<.>.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
  regex-next: ^[.,<>0-9]*[^.,<>0-9и].*
 -flex: .жъу<.>.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
  regex-next: ^[.,<>0-9]*[бвгджз].*
 paradigm: S_possess_NtoV

-paradigm: V_minus_9_intr_NtoV      # absolutive prefixes for nominal stems
 -flex: .сы.<.>
  gramm: 1.abs,sg.abs
  gloss: 1SG.ABS
 -flex: .ты.<.>
  gramm: 1.abs,pl.abs
  gloss: 1PL.ABS
 -flex: .у.<.>
  gramm: 2.abs,sg.abs
  gloss: 2SG.ABS
 -flex: .шъу.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
 -flex: .жъу.<.>
  gramm: 2.abs,pl.abs
  gloss: 2PL.ABS
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .жъу.<.>
  gramm: rel.sub
  gloss: 2PL.ABS
 -flex: .зэр<.>.
  gramm: rel.sub
  gloss: REL.SUB
  regex-next: ^[.,<>0-9]*[аиеыя].*
  regex-gramm: ^.*PRO.*$
 -flex: .зэрэ<.>.
  gramm: rel.sub
  gloss: REL.SUB
  regex-gramm: ^.*PRO.*$
 paradigm: S_aug_NtoV
 paradigm: S_car_NtoV
 paradigm: S_incorp_NtoV
 paradigm: S_number_NtoV


-paradigm: V_minus_8           # directive
 -flex: .къэ<.>.<.>
  gramm: dir
  gloss: DIR
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .къы<.>.<.>
  gramm: dir
  gloss: DIR
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .къы|зэр<.>.<.>
  gramm: dir,rel.sub
  gloss: DIR|REL.SUB
  regex-next: ^[.,<>0-9]*[аиеыя].*
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
 -flex: .къы|зэрэ<.>.<.>
  gramm: dir,rel.sub
  gloss: DIR|REL.SUB
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
 -flex: .къы|з<.>.<.>
  gramm: dir,rel.tmp
  gloss: DIR|REL.TMP
  regex-next: ^[.,<>0-9]*[аиеэя].*
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
 -flex: .къы|зы<.>.<.>
  gramm: dir,rel.tmp
  gloss: DIR|REL.TMP
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
 -flex: .а|къы<.>.<.>
  gramm: 3.io,pl.io,dir
  gloss: 3PL.IO|DIR
  paradigm: V_minus_6_intr
  paradigm: V_minus_2_3
  regex-prev: ^(с|т|у|шъу)[<>.]*$
 -flex: .къы<.>.<.>
  gramm: dir
  gloss: DIR
  paradigm: V_minus_4
  regex-next: ^[.,<>0-9]*зэр.*
 -flex: .къ<.>.<.>
  gramm: dir
  gloss: DIR
  regex-next: ^[.,<>0-9]*[аиеыя].*
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.къа.<.>
  gramm: dir,alt_stem
  gloss: DIR
  paradigm: V_plus_1
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
 -flex: .зэр<.>.<.>
  gramm: rel.sub
  gloss: REL.SUB
  regex-next: ^[.,<>0-9]*[аиеыя].*
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
 -flex: .зэрэ<.>.<.>
  gramm: rel.sub
  gloss: REL.SUB
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
 -flex: .з<.>.<.>
  gramm: rel.tmp
  gloss: REL.TMP
  regex-next: ^[.,<>0-9]*[аиеэя].*
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
 -flex: .зы<.>.<.>
  gramm: rel.tmp
  gloss: REL.TMP
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4

-paradigm: V_minus_8_intr      # directive
 -flex: .къэ<.>.<.>
  gramm: dir
  gloss: DIR
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .къы<.>.<.>
  gramm: dir
  gloss: DIR
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .къы|зэр<.>.<.>
  gramm: dir,rel.sub
  gloss: DIR|REL.SUB
  regex-next: ^[.,<>0-9]*[аиеыя].*
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .къы|зэрэ<.>.<.>
  gramm: dir,rel.sub
  gloss: DIR|REL.SUB
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .къы|з<.>.<.>
  gramm: dir,rel.tmp
  gloss: DIR|REL.TMP
  regex-next: ^[.,<>0-9]*[аиеэя].*
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .къы|зы<.>.<.>
  gramm: dir,rel.tmp
  gloss: DIR|REL.TMP
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .а|къы<.>.<.>
  gramm: 3.io,pl.io,dir
  gloss: 3PL.IO|DIR
  paradigm: V_minus_6_intr
  paradigm: V_minus_2_3
  regex-prev: ^(с|т|у|шъу)[<>.]*$
 -flex: .къ<.>.<.>
  gramm: dir
  gloss: DIR
  regex-next: ^[.,<>0-9]*[аиеыя].*
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: <0>.къа.<.>
  gramm: dir,alt_stem
  gloss: DIR
  paradigm: V_plus_1
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
 -flex: .зэр<.>.<.>
  gramm: rel.sub
  gloss: REL.SUB
  regex-next: ^[.,<>0-9]*[аиеыя].*
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .зэрэ<.>.<.>
  gramm: rel.sub
  gloss: REL.SUB
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .з<.>.<.>
  gramm: rel.tmp
  gloss: REL.TMP
  regex-next: ^[.,<>0-9]*[аиеэя].*
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .зы<.>.<.>
  gramm: rel.tmp
  gloss: REL.TMP
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr

-paradigm: V_minus_6           # object derivation
 -flex: .с<.>.<.>
  gramm: 1.io,sg.io
  gloss: 1SG.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
 -flex: .з<.>.<.>
  gramm: 1.io,sg.io
  gloss: 1SG.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .у<.>.<.>
  gramm: 2.io,sg.io
  gloss: 2SG.IO
  regex-next: ^[.,<>0-9]*[мнуиеыоаэ].*
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
 -flex: .п<.>.<.>
  gramm: 2.io,sg.io
  gloss: 2SG.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
  regex-next: ^[.,<>0-9]*[^муиеыоаэбвгджз].*
 -flex: .б<.>.<.>
  gramm: 2.io,sg.io
  gloss: 2SG.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
  regex-next: ^[.,<>0-9]*[бвгджзр].*
 -flex: .<.>.<.>
  gramm: 3.io,sg.io
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
 -flex: .т<.>.<.>
  gramm: 1.io,pl.io
  gloss: 1PL.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
 -flex: .д<.>.<.>
  gramm: 1.io,pl.io
  gloss: 1PL.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .шъу<.>.<.>
  gramm: 2.io,pl.io
  gloss: 2PL.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
 -flex: .жъу<.>.<.>
  gramm: 2.io,pl.io
  gloss: 2PL.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .а<.>.<.>
  gramm: 3.io,pl.io
  gloss: 3PL.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
 -flex: .зы<.>.<.>
  gramm: rfl.io
  gloss: RFL.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
 -flex: .зэ<.>.<.>
  gramm: rfl.io
  gloss: RFL.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
  regex-next: ^[.,<>0-9]*р(ы|[.<>])
 -flex: .з<.>.<.>
  gramm: rfl.io
  gloss: RFL.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
  regex-next: ^[.,<>0-9]*[^.,<>0-9бвгджз].*
 -flex: .зы<.>.<.>
  gramm: rel.io
  gloss: REL.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
 -flex: .з<.>.<.>
  gramm: rel.io
  gloss: REL.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
  regex-next: ^[.,<>0-9]*[^.,<>0-9бвгджз].*
 -flex: .зэ<.>.<.>
  gramm: rel.io
  gloss: REL.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final
  regex-next: ^[.,<>0-9]*р(ы|[.<>])
 -flex: .зэ<.>.<.>
  gramm: rec.io
  gloss: REC.IO
  paradigm: V_minus_6_main_nonfinal
  paradigm: V_minus_6_main_final

-paradigm: V_minus_6_intr      # object derivation
 -flex: .с<.>.<.>
  gramm: 1.io,sg.io
  gloss: 1SG.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
 -flex: .з<.>.<.>
  gramm: 1.io,sg.io
  gloss: 1SG.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .у<.>.<.>
  gramm: 2.io,sg.io
  gloss: 2SG.IO
  regex-next: ^[.,<>0-9]*[мнуиеыоаэ].*
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
 -flex: .п<.>.<.>
  gramm: 2.io,sg.io
  gloss: 2SG.IO
  regex-next: ^[.,<>0-9]*[^муиеыоаэбвгджз].*
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
 -flex: .б<.>.<.>
  gramm: 2.io,sg.io
  gloss: 2SG.IO
  regex-next: ^[.,<>0-9]*[бвгджз].*
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
 -flex: .<.>.<.>
  gramm: 3.io,sg.io
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
 -flex: .т<.>.<.>
  gramm: 1.io,pl.io
  gloss: 1PL.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
 -flex: .д<.>.<.>
  gramm: 1.io,pl.io
  gloss: 1PL.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .шъу<.>.<.>
  gramm: 2.io,pl.io
  gloss: 2PL.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
 -flex: .жъу<.>.<.>
  gramm: 2.io,pl.io
  gloss: 2PL.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .а<.>.<.>
  gramm: 3.io,pl.io
  gloss: 3PL.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
 -flex: .зы<.>.<.>
  gramm: rfl.io
  gloss: RFL.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
 -flex: .зэ<.>.<.>
  gramm: rfl.io
  gloss: RFL.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
  regex-next: ^[.,<>0-9]*р(ы|[.<>])
 -flex: .з<.>.<.>
  gramm: rfl.io
  gloss: RFL.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
  regex-next: ^[.,<>0-9]*[^.,<>0-9бвгджз].*
 -flex: .зы<.>.<.>
  gramm: rel.io
  gloss: REL.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
 -flex: .зэ<.>.<.>
  gramm: rel.io
  gloss: REL.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
  regex-next: ^[.,<>0-9]*р(ы|[.<>])
 -flex: .з<.>.<.>
  gramm: rel.io
  gloss: REL.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr
  regex-next: ^[.,<>0-9]*[^.,<>0-9бвгджз].*
 -flex: .зэ<.>.<.>
  gramm: rec.io
  gloss: REC.IO
  paradigm: V_minus_6_main_nonfinal_intr
  paradigm: V_minus_6_main_final_intr

-paradigm: V_minus_6_jen      # object derivation for faj/paj
 -flex: .с<.>.
  gramm: 1.io,sg.io
  gloss: 1SG.IO
  paradigm: V_minus_6_main_jen
 -flex: .п<.>.
  gramm: 2.io,sg.io
  gloss: 2SG.IO
  paradigm: V_minus_6_main_jen
 -flex: .<.>.
  gramm: 3.io,sg.io
  paradigm: V_minus_6_main_jen
 -flex: .т<.>.
  gramm: 1.io,pl.io
  gloss: 1PL.IO
  paradigm: V_minus_6_main_jen
 -flex: .шъу<.>.
  gramm: 2.io,pl.io
  gloss: 2PL.IO
  paradigm: V_minus_6_main_jen
 -flex: .а<.>.
  gramm: 3.io,pl.io
  gloss: 3PL.IO
  paradigm: V_minus_6_main_jen
 -flex: .зы<.>.
  gramm: rfl.io
  gloss: RFL.IO
  paradigm: V_minus_6_main_jen
 -flex: .зэ<.>.
  gramm: rfl.io
  gloss: RFL.IO
  paradigm: V_minus_6_main_jen
  regex-next: ^[.,<>0-9]*р(ы|[.<>])
 -flex: .зы<.>.
  gramm: rel.io
  gloss: REL.IO
  paradigm: V_minus_6_main_jen
 -flex: .з<.>.
  gramm: rel.io
  gloss: REL.IO
  paradigm: V_minus_6_main_jen
 -flex: .зэ<.>.
  gramm: rec.io
  gloss: REC.IO
  paradigm: V_minus_6_main_jen

-paradigm: V_minus_6_main_nonfinal
 -flex: .фы<.>.<.>//.фэ<.>.<.>
  gramm: ben
  gloss: BEN
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .фы<.>.<.>
  gramm: ben
  gloss: BEN
  paradigm: V_minus_4
  regex-next: ^[.,<>0-9]*зэрэ.*
 -flex: .ф<.>.<.>
  gramm: ben
  gloss: BEN
  paradigm: V_minus_5
 -flex: .в<.>.<.>
  gramm: ben
  gloss: BEN
  paradigm: V_minus_5
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .шIо<.>.<.>
  gramm: mal
  gloss: MAL
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .шIу<.>.<.>
  gramm: mal,alt_stem
  gloss: MAL
  paradigm: V_minus_6
  paradigm: V_minus_5
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  regex-next: ^[.,<>0-9]*а.*
 -flex: .ды<.>.<.>
  gramm: com
  gloss: COM
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .ды<.>.<.>
  gramm: com
  gloss: COM
  paradigm: V_minus_4
  regex-next: ^[.,<>0-9]*зэр.*
 -flex: .д<.>.<.>
  gramm: com
  gloss: COM
  paradigm: V_minus_5
  regex-next: ^[.,<>0-9]*[иеыаэя.<>].*
 -flex: .щы<.>.<.>
  gramm: genloc
  gloss: GENLOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .щы<.>.<.>
  gramm: genloc
  gloss: GENLOC
  paradigm: V_minus_4
  regex-next: ^[.,<>0-9]*зэр.*
 -flex: .щ<.>.<.>
  gramm: genloc
  gloss: GENLOC
  paradigm: V_minus_5
 -flex: .Iы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .Iу<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .I<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
  regex-next: ^[.,<>0-9]*[иеяа].*
 -flex: .хы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .хы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  regex-next: ^[.,<>0-9]*зэр.*
 -flex: .пы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .пы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  regex-next: ^[.,<>0-9]*зэр.*
 -flex: .п<.>.<.>
  gramm: loc
  gloss: LOC
  regex-next: ^[.,<>0-9]*[иеыаэя.<>].*
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .п<.>.<.>
  gramm: loc
  gloss: LOC
  regex-next: ^[.,<>0-9]*[р].*
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .лъы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .лъы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  regex-next: ^[.,<>0-9]*зэр.*
 -flex: .х<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_5
 -flex: .те<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .тыр<.>.<.>//.тр<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
  regex-next: ^[.,<>0-9]*[иеяа].*
 -flex: .тыры<.>.<.>//.тры<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
  regex-next: ^[.,<>0-9]*[р].*
 -flex: .и<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .ры<.>.<.>
  gramm: loc
  gloss: LOC
  regex-prev: ^.*(зы|а)[<>.]*$
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .кIэ<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .кIоцI<.>.<.>//.кIоцIы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .къо<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .ры<.>.<.>
  gramm: trans
  gloss: TRANS
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .IэкIы<.>.<.>//.IэкIэ<.>.<.>
  gramm: inadv
  gloss: INADV
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .IэкIы<.>.<.>
  gramm: inadv
  gloss: INADV
  paradigm: V_minus_4
  regex-next: ^[.,<>0-9]*зэрэ.*
 -flex: .IэкI<.>.<.>
  gramm: inadv
  gloss: INADV
  paradigm: V_minus_5
 -flex: .бгъу<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
 -flex: .бгъо<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6
  paradigm: V_minus_5
  regex-next: ^[.,<>0-9]*[дт].*

-paradigm: V_minus_6_main_nonfinal_intr
 -flex: .фы<.>.<.>//.фэ<.>.<.>
  gramm: ben
  gloss: BEN
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .ф<.>.<.>
  gramm: ben
  gloss: BEN
  paradigm: V_minus_5_intr
 -flex: .в<.>.<.>
  gramm: ben
  gloss: BEN
  paradigm: V_minus_5_intr
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .шIо<.>.<.>
  gramm: mal
  gloss: MAL
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .ды<.>.<.>
  gramm: com
  gloss: COM
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .д<.>.<.>
  gramm: com
  gloss: COM
  regex-next: ^[.,<>0-9]*[иеыаэя.<>].*
  paradigm: V_minus_5_intr
 -flex: .щы<.>.<.>
  gramm: genloc
  gloss: GENLOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .щ<.>.<.>
  gramm: genloc
  gloss: GENLOC
  regex-next: ^[.,<>0-9]*[иэеяа].*
  paradigm: V_minus_5_intr
 -flex: .Iы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .Iу<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .I<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_5_intr
  regex-next: ^[.,<>0-9]*[иэеяа].*
 -flex: .хы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .х<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_5_intr
 -flex: .пы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .п<.>.<.>
  gramm: loc
  gloss: LOC
  regex-next: ^[.,<>0-9]*[иеыаэя.<>].*
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .лъы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .те<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .тыр<.>.<.>//.тр<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  regex-next: ^[.,<>0-9]*[иеяа].*
 -flex: .тыры<.>.<.>//.тры<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  regex-next: ^[.,<>0-9]*[р].*
 -flex: .и<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .ры<.>.<.>
  gramm: loc
  gloss: LOC
  regex-prev: ^.*(зы|а)[^<>]*
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .кIэ<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .кIоцI<.>.<.>//.кIоцIы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .къо<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .ры<.>.<.>
  gramm: trans
  gloss: TRANS
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .IэкIы<.>.<.>//.IэкIэ<.>.<.>
  gramm: inadv
  gloss: INADV
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .IэкI<.>.<.>
  gramm: inadv
  gloss: INADV
  paradigm: V_minus_5_intr
 -flex: .бгъу<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
 -flex: .бгъо<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_6_intr
  paradigm: V_minus_5_intr
  regex-next: ^[.,<>0-9]*[дт].*

-paradigm: V_minus_6_main_final
 -flex: .фэ<.>.<.>
  gramm: ben
  gloss: BEN
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.фа.<.>
  gramm: ben,alt_stem
  gloss: BEN
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .ф<.>.<.>
  gramm: ben
  gloss: BEN
  regex-next: ^[.,<>0-9]*[иеяа].*
  paradigm: V_minus_4
 -flex: .шIо<.>.<.>
  gramm: mal
  gloss: MAL
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.шIа<.>.<.>
  gramm: mal,alt_stem
  gloss: MAL
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .дэ<.>.<.>
  gramm: com
  gloss: COM
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.да.<.>
  gramm: com,alt_stem
  gloss: COM
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .д<.>.<.>
  gramm: com
  gloss: COM
  regex-next: ^[.,<>0-9]*[иеыаэя.<>].*
  paradigm: V_minus_4
 -flex: .пэ<.>.<.>//.пы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.па.<.>
  gramm: loc,alt_stem
  gloss: LOC
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .п<.>.<.>
  gramm: loc
  gloss: LOC
  regex-next: ^[.,<>0-9]*[иеяа].*
  paradigm: V_minus_4
 -flex: .п<.>.<.>
  gramm: loc
  gloss: LOC
  regex-next: ^[.,<>0-9]*[р].*
  paradigm: V_minus_4
 -flex: .щы<.>.<.>
  gramm: genloc
  gloss: GENLOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .щ<.>.<.>
  gramm: genloc
  gloss: GENLOC
  regex-next: ^[.,<>0-9]*[иэеяа].*
  paradigm: V_minus_4
  paradigm: V_minus_5
 -flex: .Iы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .Iу<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .I<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_5
  regex-next: ^[.,<>0-9]*[иэеяа].*
 -flex: .хэ<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.ха.<.>
  gramm: loc,alt_stem
  gloss: LOC
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .х<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
 -flex: .лъы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .лъ<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  regex-next: [.<>][иеэа].*
 -flex: .те<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .тыр<.>.<.>//.тр<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  regex-next: ^[.,<>0-9]*[иеяа].*
 -flex: .тры<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_4_intr
  regex-next: ^[.,<>0-9]*[р].*
 -flex: .кIэ<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .кI<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  regex-next: ^[.,<>0-9]*[иеяа].*
 -flex: .кIоцI<.>.<.>//.кIоцIы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.кIа.<.>
  gramm: loc,alt_stem
  gloss: LOC
  regex-stem: ^[.,<>0-9]*[^ыиая<>.,]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .къо<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .го<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .гу<.>.<.>
  gramm: loc
  gloss: LOC
  regex-next: ^[.,<>0-9]*и.*
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .бгъу<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .бгъо<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  regex-next: ^[.,<>0-9]*[дт].*
 -flex: .Iэпы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .Iэп<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  regex-next: ^[.,<>0-9]*[иэеяа].*
 -flex: .и<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .р<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .ры<.>.<.>
  gramm: loc
  gloss: LOC
  regex-prev: ^.*(зы|а)[^<>]*
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .рэ<.>.<.>
  gramm: trans
  gloss: TRANS
  regex-prev: ^.*([^э.<>]|[^з]э)[<>.]*$
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .ры<.>.<.>
  gramm: trans
  gloss: TRANS
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .р<.>.<.>
  gramm: trans
  gloss: TRANS
  regex-prev: ^.*([^э.<>]|[^з]э)[<>.]*$
  regex-next: ^[.,<>0-9]*[еяа].*
  paradigm: V_minus_4
 -flex: .IэкIэ<.>.<.>
  gramm: inadv
  gloss: INADV
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.IэкIа.<.>
  gramm: inadv,alt_stem
  gloss: INADV
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .IэкI<.>.<.>
  gramm: inadv
  gloss: INADV
  regex-next: ^[.,<>0-9]*[^.,<>0-9ыея].*
  paradigm: V_minus_4

-paradigm: V_minus_6_main_final_intr
 -flex: .фэ<.>.<.>
  gramm: ben
  gloss: BEN
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: <0>.фа.<.>
  gramm: ben,alt_stem
  gloss: BEN
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .ф<.>.<.>
  gramm: ben
  gloss: BEN
  regex-next: ^[.,<>0-9]*[иеяа].*
  paradigm: V_minus_2_3
  paradigm: V_minus_4_intr
 -flex: .шIо<.>.<.>
  gramm: mal
  gloss: MAL
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: <0>.шIа<.>.<.>
  gramm: mal,alt_stem
  gloss: MAL
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .дэ<.>.<.>
  gramm: com
  gloss: COM
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: <0>.да.<.>
  gramm: com,alt_stem
  gloss: COM
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .д<.>.<.>
  gramm: com
  gloss: COM
  regex-next: ^[.,<>0-9]*[иеыаэя.<>].*
  paradigm: V_minus_2_3
 -flex: .пэ<.>.<.>//.пы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4_intr
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.па.<.>
  gramm: loc,alt_stem
  gloss: LOC
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .п<.>.<.>
  gramm: loc
  gloss: LOC
  regex-next: ^[.,<>0-9]*[иеяа].*
  paradigm: V_minus_2_3
 -flex: .п<.>.<.>
  gramm: loc
  gloss: LOC
  regex-next: ^[.,<>0-9]*[р].*
  paradigm: V_minus_2_3
 -flex: .щы<.>.<.>
  gramm: genloc
  gloss: GENLOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .щ<.>.<.>
  gramm: genloc
  gloss: GENLOC
  regex-next: ^[.,<>0-9]*[иэеяа].*
  paradigm: V_minus_2_3
  paradigm: V_minus_4_intr
 -flex: .Iы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4_intr
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .Iу<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4_intr
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .I<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4_intr
  paradigm: V_minus_2_3
  regex-next: ^[.,<>0-9]*[иэеяа].*
 -flex: .хэ<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: <0>.ха.<.>
  gramm: loc,alt_stem
  gloss: LOC
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .х<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_4_intr
 -flex: .лъы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .лъ<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
  regex-next: [.<>][иеэа].*
 -flex: .те<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .тыр<.>.<.>//.тр<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_4_intr
  regex-next: ^[.,<>0-9]*[иеяа].*
 -flex: .тры<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_4_intr
  regex-next: ^[.,<>0-9]*[р].*
 -flex: .кIэ<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .кI<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4_intr
  paradigm: V_minus_2_3
  regex-next: ^[.,<>0-9]*[иеяа].*
 -flex: .кIоцI<.>.<.>//.кIоцIы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: <0>.кIа.<.>
  gramm: loc,alt_stem
  gloss: LOC
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .къо<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .го<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .гу<.>.<.>
  gramm: loc
  gloss: LOC
  regex-next: ^[.,<>0-9]*и.*
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .бгъу<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .бгъу<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
  regex-next: ^[.,<>0-9]*[дт].*
 -flex: .Iэпы<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .Iэп<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
  regex-next: ^[.,<>0-9]*[иэеяа].*
 -flex: .и<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .р<.>.<.>
  gramm: loc
  gloss: LOC
  paradigm: V_minus_4_intr
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .ры<.>.<.>
  gramm: loc
  gloss: LOC
  regex-prev: ^.*(зы|а)[^<>]*
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .рэ<.>.<.>
  gramm: trans
  gloss: TRANS
  regex-prev: ^.*([^э.<>]|[^з]э)[<>.]*$
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .ры<.>.<.>
  gramm: trans
  gloss: TRANS
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .р<.>.<.>
  gramm: trans
  gloss: TRANS
  regex-prev: ^.*([^э.<>]|[^з]э)[<>.]*$
  regex-next: ^[.,<>0-9]*[еяа].*
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .IэкIэ<.>.<.>
  gramm: inadv
  gloss: INADV
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: <0>.IэкIа.<.>
  gramm: inadv,alt_stem
  gloss: INADV
  regex-stem: ^[.,<>0-9]*[^ыиая<>.]{1,5}[.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .IэкI<.>.<.>
  gramm: inadv
  gloss: INADV
  regex-next: ^[.,<>0-9]*[иеяа].*
  paradigm: V_minus_2_3
  paradigm: V_minus_4_intr


-paradigm: V_minus_6_main_jen
 -flex: .фа.
  gramm: ben,alt_stem
  gloss: BEN
 -flex: .па.
  gramm: loc,alt_stem
  gloss: LOC

-paradigm: V_minus_5           # dative derivation
 -flex: .с|э<.>.<.>
  gramm: 1.io,sg.io,dat
  gloss: 1SG.IO|DAT
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.с|а<.>.<.>
  gramm: 1.io,sg.io,dat,alt_stem
  gloss: 1SG.IO|DAT
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .с<.>.<.>
  gramm: 1.io,sg.io,dat
  gloss: 1SG.IO
  regex-next: ^[.,<>0-9]*[иа].*
  paradigm: V_minus_4
 -flex: .о<.>.<.>
  gramm: 2.io,sg.io,dat
  gloss: 2SG.IO+DAT
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .у|э<.>.<.>
  gramm: 2.io,sg.io,dat
  gloss: 2SG.IO|DAT
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.у|а<.>.<.>
  gramm: 2.io,sg.io,dat,alt_stem
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: V_plus_1
# -flex: .п|э<.>.<.>
#  gramm: 2.io,sg.io,dat
#  gloss: 2SG.IO|DAT
#  paradigm: V_minus_4
#  paradigm: V_minus_2_3
#  paradigm: V_minus_1
#  paradigm: V_minus_1_empty
# -flex: <0>.п|а<.>.<.>
#  gramm: 2.io,sg.io,dat,alt_stem
#  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
#  paradigm: V_plus_1
 -flex: .о<.>.<.>
  gramm: 2.io,sg.io,dyn
  gloss: 2SG.IO+DYN
  paradigm: V_minus_1_dyn
 -flex: .е<.>.<.>
  gramm: 3.io,sg.io,dat
  gloss: DAT
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .е<.>.<.>
  gramm: 3.io,sg.io,dat,dyn
  gloss: DAT+DYN
  paradigm: V_minus_1_dyn
 -flex: <0>.а.<.>
  gramm: 3.io,sg.io,dat
  gloss: DAT
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .р<.>.<.>
  gramm: 3.io,sg.io,dat
  gloss: DAT
  regex-next: ^[.,<>0-9]*[аеиоуыюя].*
  paradigm: V_minus_4
 -flex: .т|э<.>.<.>
  gramm: 1.io,pl.io,dat
  gloss: 1PL.IO|DAT
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .т|а<.>.<.>
  gramm: 1.io,pl.io,dat,alt_stem
  gloss: 1PL.IO|DAT
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .т<.>.<.>
  gramm: 1.io,pl.io,dat
  gloss: 1PL.IO
  regex-next: ^[.,<>0-9]*[иа].*
  paradigm: V_minus_4
 -flex: .шъо<.>.<.>
  gramm: 2.io,pl.io,dat
  gloss: 2PL.IO+DAT
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .шъу<.>.<.>
  gramm: 2.io,pl.io,dat
  gloss: 2PL.IO
  regex-next: ^[.,<>0-9]*[иа].*
  paradigm: V_minus_4
 -flex: .а|р<.>.<.>
  gramm: 3.io,pl.io,dat
  gloss: 3PL.IO|DAT
  regex-next: ^[.,<>0-9]*[аеиоуыюя].*
  paradigm: V_minus_4
 -flex: .я<.>.<.>
  gramm: 3.io,pl.io,dat
  gloss: 3PL.IO+DAT
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .з|э<.>.<.>
  gramm: rfl.io,dat
  gloss: RFL.IO|DAT
  paradigm: V_minus_4
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: <0>.з|а<.>.<.>
  gramm: rfl.io,dat,alt_stem
  gloss: RFL.IO|DAT
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .зэ|р<.>.<.>
  gramm: rfl.io,dat
  gloss: RFL.IO|DAT
  paradigm: V_minus_4
  regex-next: ^[.,<>0-9]*[иа].*
 -flex: .зэ|р<.>.<.>
  gramm: rfl.io,dat
  gloss: REL.IO|DAT
  paradigm: V_minus_4
  regex-next: ^[.,<>0-9]*[иа].*
 -flex: <0>.за|р<.>.<.>
  gramm: rfl.io,dat,alt_stem
  gloss: RFL.IO|DAT
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .з<.>.<.>
  gramm: rfl.io,dat
  gloss: RFL.IO|DAT
  regex-next: ^[.,<>0-9]*[иа].*
  paradigm: V_minus_4

-paradigm: V_minus_5_intr      # dative derivation
 -flex: .с|э<.>.<.>
  gramm: 1.io,sg.io,dat
  gloss: 1SG.IO|DAT
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: <0>.с|а<.>.<.>
  gramm: 1.io,sg.io,dat,alt_stem
  gloss: 1SG.IO|DAT
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .с<.>.<.>
  gramm: 1.io,sg.io,dat
  gloss: 1SG.IO
  regex-next: ^[.,<>0-9]*[иа].*
  paradigm: V_minus_4_intr
 -flex: .о<.>.<.>
  gramm: 2.io,sg.io,dat
  gloss: 2SG.IO+DAT
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
# -flex: .п|э<.>.<.>
#  gramm: 2.io,sg.io,dat
#  gloss: 2SG.IO|DAT
#  paradigm: V_minus_2_3
#  paradigm: V_minus_1
#  paradigm: V_minus_1_empty
#  paradigm: V_minus_4_intr
# -flex: <0>.п|а<.>.<.>
#  gramm: 2.io,sg.io,dat,alt_stem
#  gloss: 2SG.IO|DAT
#  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
#  paradigm: V_plus_1
 -flex: .у|э<.>.<.>
  gramm: 2.io,sg.io,dat
  gloss: 2SG.IO|DAT
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: <0>.у|а<.>.<.>
  gramm: 2.io,sg.io,dat,alt_stem
  gloss: 2SG.IO|DAT
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .о<.>.<.>
  gramm: 2.io,sg.io,dyn
  gloss: 2SG.IO+DYN
  paradigm: V_minus_1_dyn
 -flex: .е<.>.<.>
  gramm: 3.io,sg.io,dat
  gloss: DAT
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .е<.>.<.>
  gramm: 3.io,sg.io,dat,dyn
  gloss: DAT+DYN
  paradigm: V_minus_1_dyn
 -flex: <0>.я.<.>
  gramm: 3.io,sg.io,dat
  gloss: DAT
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: additives
 -flex: .р<.>.<.>
  gramm: 3.io,sg.io,dat
  gloss: DAT
  regex-next: ^[.,<>0-9]*[аеиоуыюя].*
  paradigm: V_minus_4_intr
 -flex: .т|э<.>.<.>
  gramm: 1.io,pl.io,dat
  gloss: 1PL.IO|DAT
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: <0>.т|а<.>.<.>
  gramm: 1.io,pl.io,dat,alt_stem
  gloss: 1PL.IO|DAT
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
#  paradigm: V_plus_1
 -flex: .т<.>.<.>
  gramm: 1.io,pl.io,dat
  gloss: 1PL.IO
  regex-next: ^[.,<>0-9]*[иа].*
  paradigm: V_minus_4_intr
 -flex: .шъо<.>.<.>
  gramm: 2.io,pl.io,dat
  gloss: 2PL.IO+DAT
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .шъу<.>.<.>
  gramm: 2.io,pl.io,dat
  gloss: 2PL.IO
  regex-next: ^[.,<>0-9]*[иа].*
  paradigm: V_minus_4_intr
 -flex: .а|р<.>.<.>
  gramm: 3.io,pl.io,dat
  gloss: 3PL.IO|DAT
  regex-next: ^[.,<>0-9]*[аеиоуыюя].*
  paradigm: V_minus_4_intr
 -flex: .я<.>.<.>
  gramm: 3.io,pl.io,dat
  gloss: 3PL.IO+DAT
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .з|э<.>.<.>
  gramm: rfl.io,dat
  gloss: RFL.IO|DAT
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
  paradigm: V_minus_4_intr
 -flex: .з|а<.>.<.>
  gramm: rfl.io,dat,alt_stem
  gloss: RFL.IO|DAT
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .зэ|р<.>.<.>
  gramm: rfl.io,dat
  gloss: RFL.IO|DAT
  paradigm: V_minus_4_intr
  regex-next: ^[.,<>0-9]*[иа].*
 -flex: <0>.за|р<.>.<.>
  gramm: rfl.io,dat,alt_stem
  gloss: RFL.IO|DAT
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: V_plus_1
 -flex: .з<.>.<.>
  gramm: rfl.io,dat
  gloss: RFL.IO
  regex-next: ^[.,<>0-9]*[иа].*
  paradigm: V_minus_4_intr

-paradigm: V_minus_1_dyn       # causative (if dynamic prefix is present)
 -flex: .гъэ.<.>
  gramm: caus
  gloss: CAUS
 -flex: <0>.гъа.<.>
  gramm: caus,alt_stem
  gloss: CAUS
  regex-stem: ^[^аеиоуыэюя]*[оеэ][.,<>0-9]*$
 -flex: .гъэ|гъэ.<.>
  gramm: caus
  gloss: CAUS|CAUS
 -flex: <0>.гъэ|гъа.<.>
  gramm: caus,alt_stem
  gloss: CAUS|CAUS
  regex-stem: ^[^аеиоуыэюя]*[оеэ][.,<>0-9]*$
 -flex: ..<.>
  gramm:
 paradigm: V_plus_1

-paradigm: V_minus_1_dyn_intr  # causative (if dynamic prefix is present)
 -flex: .гъэ.<.>
  gramm: caus
  gloss: CAUS
 -flex: <0>.гъа.<.>
  gramm: caus,alt_stem
  gloss: CAUS
  regex-stem: ^[^аеиоуыэюя]*[оеэ][.,<>0-9]*$
 -flex: .гъэ|гъэ.<.>
  gramm: caus
  gloss: CAUS|CAUS
 -flex: <0>.гъэ|гъа.<.>
  gramm: caus,alt_stem
  gloss: CAUS|CAUS
  regex-stem: ^[^аеиоуыэюя]*[оеэ][.,<>0-9]*$
 paradigm: V_plus_1


-paradigm: V_minus_4           # agent-ergative markers
 -flex: .с<.>.<.>
  gramm: 1.erg,sg.erg
  gloss: 1SG.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .з<.>.<.>
  gramm: 1.erg,sg.erg
  gloss: 1SG.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .з<.>.<.>
  gramm: 1.erg,sg.erg
  gloss: 1SG.ERG
  paradigm: V_minus_1_empty
  regex-stem: ^[.,<>0-9]*[бвгджз].*
 -flex: .сы<.>.<.>
  gramm: 1.erg,sg.erg
  gloss: 1SG.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[му].*
 -flex: .сы<.>.<.>
  gramm: 1.erg,sg.erg
  gloss: 1SG.ERG
  paradigm: V_minus_1_empty
  regex-stem: ^[.,<>0-9]*[му].*
 -flex: .т<.>.<.>
  gramm: 1.erg,pl.erg
  gloss: 1PL.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .д<.>.<.>
  gramm: 1.erg,pl.erg
  gloss: 1PL.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .д<.>.<.>
  gramm: 1.erg,pl.erg
  gloss: 1PL.ERG
  paradigm: V_minus_1_empty
  regex-stem: ^[.,<>0-9]*[бвгджз].*
 -flex: .ты<.>.<.>
  gramm: 1.erg,pl.erg
  gloss: 1PL.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[му].*
 -flex: .ты<.>.<.>
  gramm: 1.erg,pl.erg
  gloss: 1PL.ERG
  paradigm: V_minus_1_empty
  regex-stem: ^[.,<>0-9]*[му].*
 -flex: .у<.>.<.>
  gramm: 2.erg,sg.erg
  gloss: 2SG.ERG
  regex-next: ^[.,<>0-9]*[мнуиеыоаэ].*
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .о<.>.<.>
  gramm: 2.erg,sg.erg,dyn
  gloss: 2SG.ERG+DYN
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .у|э<.>.<.>
  gramm: 2.erg,sg.erg,dyn
  gloss: 2SG.ERG|DYN
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty

 -flex: .п<.>.<.>
  gramm: 2.erg,sg.erg
  gloss: 2SG.ERG
  regex-next: ^[.,<>0-9]*[муиеыоаэбвгджз].*
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .б<.>.<.>
  gramm: 2.erg,sg.erg
  gloss: 2SG.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .б<.>.<.>
  gramm: 2.erg,sg.erg
  gloss: 2SG.ERG
  paradigm: V_minus_1_empty
  regex-stem: ^[.,<>0-9]*[бвгджз].*
 -flex: .шъу<.>.<.>
  gramm: 2.erg,pl.erg
  gloss: 2PL.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .жъу<.>.<.>
  gramm: 2.erg,pl.erg
  gloss: 2PL.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .жъу<.>.<.>
  gramm: 2.erg,pl.erg
  gloss: 2PL.ERG
  paradigm: V_minus_1_empty
  regex-stem: ^[.,<>0-9]*[бвгджз].*
 -flex: .ы<.>.<.>
  gramm: 3.erg,sg.erg
  gloss: 3SG.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .и<.>.<.>
  gramm: 3.erg,sg.erg
  gloss: 3SG.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .е<.>.<.>
  gramm: 3.erg,sg.erg,dyn
  gloss: 3SG.ERG+DYN
  paradigm: V_minus_1_dyn
 -flex: .а<.>.<.>
  gramm: 3.erg,pl.erg
  gloss: 3PL.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .зы<.>.<.>
  gramm: rel.erg
  gloss: REL.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .зэрэ<.>.<.>
  gramm: rec.erg
  gloss: REC.ERG
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .зэр<.>.<.>
  gramm: rec.erg
  gloss: REC.ERG
  regex-next: ^[.,<>0-9]*[аоуыеиэюя]
  paradigm: V_minus_2_3
  paradigm: V_minus_1
  paradigm: V_minus_1_empty

-paradigm: V_minus_4_intr      # agent-ergative markers
 -flex: .с<.>.<.>
  gramm: 1.erg,sg.erg
  gloss: 1SG.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
 -flex: .з<.>.<.>
  gramm: 1.erg,sg.erg
  gloss: 1SG.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .сы<.>.<.>
  gramm: 1.erg,sg.erg
  gloss: 1SG.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[му].*
 -flex: .т<.>.<.>
  gramm: 1.erg,pl.erg
  gloss: 1PL.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
 -flex: .д<.>.<.>
  gramm: 1.erg,pl.erg
  gloss: 1PL.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .ты<.>.<.>
  gramm: 1.erg,pl.erg
  gloss: 1PL.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[му].*
 -flex: .у<.>.<.>
  gramm: 2.erg,sg.erg
  gloss: 2SG.ERG
  regex-next: ^[.,<>0-9]*[мнуиеыоаэ].*
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
 -flex: .п<.>.<.>
  gramm: 2.erg,sg.erg
  gloss: 2SG.ERG
  regex-next: ^[.,<>0-9]*[муиеыоаэбвгджз].*
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
 -flex: .б<.>.<.>
  gramm: 2.erg,sg.erg
  gloss: 2SG.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .шъу<.>.<.>
  gramm: 2.erg,pl.erg
  gloss: 2PL.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
 -flex: .жъу<.>.<.>
  gramm: 2.erg,pl.erg
  gloss: 2PL.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
  regex-next: ^[.,<>0-9]*[бвгджз].*
 -flex: .ы<.>.<.>
  gramm: 3.erg,sg.erg
  gloss: 3SG.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
 -flex: .и<.>.<.>
  gramm: 3.erg,sg.erg
  gloss: 3SG.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
 -flex: .е<.>.<.>
  gramm: 3.erg,sg.erg,dyn
  gloss: 3SG.ERG+DYN
  paradigm: V_minus_1_dyn_intr
 -flex: .а<.>.<.>
  gramm: 3.erg,pl.erg
  gloss: 3PL.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
 -flex: .зы<.>.<.>
  gramm: rel.erg
  gloss: REL.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
 -flex: .зэрэ<.>.<.>
  gramm: rec.erg
  gloss: REC.ERG
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1
 -flex: .зэр<.>.<.>
  gramm: rec.erg
  gloss: REC.ERG
  regex-next: ^[.,<>0-9]*[аоуыеиэюя]
  paradigm: V_minus_2_3_intr
  paradigm: V_minus_1

-paradigm: V_minus_1           # causative
 -flex: .гъэ.<.>
  gramm: caus
  gloss: CAUS
 -flex: .гъэ|гъэ.<.>
  gramm: caus
  gloss: CAUS|CAUS
 -flex: <0>.гъа.<.>
  gramm: caus
  gloss: CAUS
  regex-stem: ^[^аеиоуыэюя]*[оеэ][.,<>0-9]*$
 -flex: <0>.гъэ|гъа.<.>
  gramm: caus
  gloss: CAUS|CAUS
  regex-stem: ^[^аеиоуыэюя]*[оеэ][.,<>0-9]*$
 paradigm: V_plus_1

-paradigm: V_minus_1_intr      # causative
 -flex: .гъэ.<.>
  gramm: caus
  gloss: CAUS
 -flex: .гъэ|гъэ.<.>
  gramm: caus
  gloss: CAUS|CAUS
 -flex: <0>.гъа.<.>
  gramm: caus
  gloss: CAUS
  regex-stem: ^[^аеиоуыэюя]*[оеэ][.,<>0-9]*$
 -flex: <0>.гъэ|гъа.<.>
  gramm: caus
  gloss: CAUS|CAUS
  regex-stem: ^[^аеиоуыэюя]*[оеэ][.,<>0-9]*$
 paradigm: V_plus_1

-paradigm: V_minus_1_empty
 -flex: ..<.>
  gramm:
 paradigm: V_plus_1

-paradigm: V_minus_2_3         # dynamic prefix / optative + negative
 -flex: .э<.>.<.>
  gramm: dyn
  gloss: DYN
  paradigm: V_minus_1_dyn
 -flex: .мы<.>.<.>
  gramm: neg
  gloss: NEG
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .мы<.>.<.>
  gramm: 2.erg,sg.erg,neg
  gloss: 2SG.ERG+NEG
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .орэ<.>.<.>
  gramm: imp2
  gloss: IMP2
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .орэ|мы<.>.<.>
  gramm: imp2,neg
  gloss: IMP2|NEG
  paradigm: V_minus_1
  paradigm: V_minus_1_empty

-paradigm: V_minus_2_3_intr    # dynamic prefix / optative + negative
 -flex: .э<.>.<.>
  gramm: dyn
  gloss: DYN
  paradigm: V_minus_1_dyn_intr
 -flex: .мы<.>.<.>
  gramm: neg
  gloss: NEG
  paradigm: V_minus_1
 -flex: .орэ<.>.<.>
  gramm: imp2
  gloss: IMP2
  paradigm: V_minus_1
 -flex: .орэ|мы<.>.<.>
  gramm: imp2,neg
  gloss: IMP2|NEG
  paradigm: V_minus_1

-paradigm: V_minus_2_3_initial # word-initial dynamic prefix
 -flex: .мэ<.>.<.>
  gramm: dyn
  gloss: DYN
  paradigm: V_minus_1_dyn
 -flex: <0>.ма.<.>
  gramm: dyn
  gloss: DYN
  regex-stem: ^[^аеёиоуыэюя]*[оэе][.,<>0-9]*$
  paradigm: additives
 -flex: .мы<.>.<.>
  gramm: neg
  gloss: NEG
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .мы<.>.<.>
  gramm: 2.erg,sg.erg,neg
  gloss: 2SG.ERG+NEG
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .орэ<.>.<.>
  gramm: imp2
  gloss: IMP2
  paradigm: V_minus_1
  paradigm: V_minus_1_empty
 -flex: .орэ|мы<.>.<.>
  gramm: imp2,neg
  gloss: IMP2|NEG
  paradigm: V_minus_1
  paradigm: V_minus_1_empty

-paradigm: V_plus_1            # common incorporated verbal stems
 -flex: .кIэе<.>//.кIэй
  gramm: int1
  gloss: INT1
 -flex: .кIай
  gramm: int1,alt_stem
  gloss: INT1
 -flex: .кIэя<.>//.кIае<.>
  gramm: int1,alt_stem
  gloss: INT1
# -flex: .е<.>//.ей<.>
#  gramm: int3
#  gloss: INT3
#  regex-prev: .*(гъа|гъэ)[.,<>0-9]*$
 -flex: <0,1>.Iо<.>//<0,1>.Iуэ<.>
  gramm: exc2
  gloss: EXC2
  regex-prev-gramm: ^A.*$
 -flex: <0>.Iуа<.>
  gramm: exc2,alt_stem
  gloss: EXC2
  regex-prev-gramm: ^A.*$
 -flex: <0,1>.Iу^
  gramm: exc2
  gloss: EXC2
  regex-prev-gramm: ^A.*$
 -flex: .шъо<.>//.шъуэ<.>
  gramm: seem
  gloss: SEEM
  paradigm: V_plus_2
 -flex: .шъуа<.>
  gramm: seem,alt_stem
  gloss: SEEM
  paradigm: V_plus_2
 -flex: .шъу
  gramm: seem
  gloss: SEEM
 -flex: .гъое<.>//.гъой<.>
  gramm: dificil
  gloss: DIFICIL
 -flex: .гъуае<.>//.гъуай<.>//.гъоя<.>
  gramm: dificil,alt_stem
  gloss: DIFICIL
 -flex: .гъошIу<.>
  gramm: facil
  gloss: FACIL
 -flex: .гущэ<.>
  gramm: pity
  gloss: PITY
 -flex: <1>.хьэ<.>//<1>.хь<.>
  gramm: ill
  gloss: ILL
 -flex: <0>.хьэ<.>//<0>.хь<.>
  gramm: ill
  gloss: ILL
 -flex: <0>.хьа<.>
  gramm: ill,alt_stem
  gloss: ILL
  regex-next: ^(.*[эео][^ыаяэео]*|[.,<>0-9]*гъ[.,<>0-9]*)$
 -flex: <0>.кIы<.>//<0>.кI<.>
  gramm: el
  gloss: EL
  paradigm: V_plus_2_final
 -flex: <1>.лIэ<.>//<1>.лI<.>
  gramm: cont
  gloss: CONT
 -flex: <0>.лIэ<.>//<0>.лI<.>
  gramm: cont
  gloss: CONT
  regex-prev: ^.*[иыу][.,<>0-9]*$
 -flex: <0>.лIа<.>
  gramm: cont,alt_stem
  gloss: CONT
  regex-next: ^.*[эео][^ыаяэео]*$
 -flex: <0,1>.хы<.>
  gramm: down
  gloss: DOWN
 -flex: <0,1>.жьэ<.>//<0,1>.жь<.>
  gramm: inch
  gloss: INCH
 -flex: <0>.жьа<.>
  gramm: inch,alt_stem
  gloss: INCH
  regex-next: ^.*[эео][^ыаяэео]*$
 -flex: <0,1>.е<.>//<0,1>.й<.>
  gramm: up
  gloss: UP
 -flex: <0>.я<.>
  gramm: up,alt_stem
  gloss: UP
  regex-next: ^.*[эео][^ыаяэео]*$
 -flex: .<.>
  gramm:
 -flex: <0,2>.<.>
  gramm:
 paradigm: V_plus_2
 paradigm: V_plus_2_final
 paradigm: V_plus_3
 paradigm: V_plus_4
 paradigm: V_plus_5_mod
 paradigm: V_plus_5
 paradigm: V_nmlz
 paradigm: additives

-paradigm: V_nmlz              # nominalizations
 -flex: <0,1>.пIэ<.>//<0,1>.пI<.>
  gramm: nmlz.loc
  gloss: NMLZ.LOC
 -flex: <0,1>.кIэ<.>//<0,1>.кI<.>
  gramm: nmlz.mnr
  gloss: NMLZ.MNR
 -flex: <0,1>.кIо<.>//<0,1>.кIу<.>//<0>.кIуа<.>
  gramm: nmlz.ag
  gloss: NMLZ.AG
 -flex: <0>.ны|гъэ<.>//<0>.ны|гъ<.>
  gramm: mod,abstr
  gloss: MOD|ABSTR
 -flex: <0,1>.гъо<.>//<0,1>.гъу<.>
  gramm: nmlz.time
  gloss: NMLZ.TIME
 paradigm: S_aug
 paradigm: S_car
 paradigm: S_incorp
 paradigm: S_number

-paradigm: V_plus_2_final      # word-final versions of past tense suffix etc.
 -flex: <0>.щт//<0>.щты
  gramm: fut
  gloss: FUT
 -flex: <0>.щты|щт//<0>.щты|щты
  gramm: aux,fut
  gloss: AUX|FUT
 -flex: <0>.шъу|щт//<0>.шъу|щты
  gramm: pot,fut
  gloss: POT|FUT
 -flex: <0>.жьы|щт//<0>.жьы|щты
  gramm: re,fut
  gloss: RE|FUT
 -flex: <0>.гъэ|щты//<0>.гъэ|щт
  gramm: fut,pst
  gloss: PST|FUT
 -flex: <0>.гъа|гъэ|щты//<0>.гъа|гъэ|щт//<0>.гъэ|гъэ|щты//<0>.гъэ|гъэ|щт
  gramm: fut,pst
  gloss: PST|PST|FUT
 -flex: <0>.жьы|гъэ|щты//<0>.жьы|гъэ|щт
  gramm: re,fut,pst
  gloss: RE|PST|FUT


-paradigm: V_plus_2            # past tense suffix etc.
 -flex: <1,0>.гъ<.>//<1,0>.гъэ<.>
  gramm: pst
  gloss: PST
 -flex: <0>.н<.>//<0>.ны<.>
  gramm: mod
  gloss: MOD
 -flex: <0>.гъэ|гъ<.>//<0>.гъэ|гъэ<.>
  gramm: pst,pst2
  gloss: PST|PST
 -flex: <0>.гъа|гъ<.>//<0>.гъа|гъэ<.>
  gramm: pst,pst2,alt_stem
  gloss: PST|PST
 -flex: <0>.гъа<.>
  gramm: pst,alt_stem
  gloss: PST
  regex-next: ^[.,<>0-9]*[^.,<>0-9аоуыэеиюя]+[эе][^аоуыэеиюя]*$
 -flex: <0>.гъа<.>
  gramm: pst,alt_stem
  gloss: PST
  regex-next: ^[.,<>0-9]*[йещш][^аыеиюя]*$
  paradigm: V_plus_1
 -flex: <0>.щты|гъ<.>//<0>.щты|гъэ<.>//<0>.щт|гъ<.>//<0>.щт|гъэ<.>
  gramm: aux,pst
  gloss: AUX|PST
 -flex: <0>.щты|гъэ|гъ<.>//<0>.щты|гъэ|гъэ<.>//<0>.щты|гъа|гъ<.>//<0>.щты|гъа|гъэ<.>//<0>.щт|гъэ|гъ<.>//<0>.щт|гъэ|гъэ<.>//<0>.щт|гъа|гъ<.>//<0>.щт|гъа|гъэ<.>
  gramm: aux,pst
  gloss: AUX|PST|PST
 -flex: <0>.гъэ|щты<.>//<0>.гъэ|щт<.>
  gramm: aux,pst
  gloss: PST|AUX
 -flex: <0>.гъа|гъэ|щты<.>//<0>.гъа|гъэ|щт<.>//<0>.гъэ|гъэ|щты<.>//<0>.гъэ|гъэ|щт<.>#  gramm: aux,pst
  gloss: PST|PST|AUX
 -flex: <0>.гъэ|щты|гъ<.>//<0>.гъэ|щты|гъэ<.>//<0>.гъэ|щт|гъ<.>//<0>.гъэ|щт|гъэ<.>
  gramm: aux,pst
  gloss: PST|AUX|PST
 -flex: <0>.жьы|гъэ|щты<.>//<0>.жьы|гъэ|щт<.>
  gramm: re,aux,pst
  gloss: RE|PST|AUX
 -flex: <0>.щт<.>//<0>.щты<.>
  gramm: aux
  gloss: AUX
  regex-next: ^[.,<>0-9]*н.*
 -flex: <0>.щт<.>//<0>.щты<.>
  gramm: fut
  gloss: FUT
  regex-next: ^[.,<>0-9]*([^н.,<>0-9].*|$)
 -flex: <0>.щты|щт<.>//<0>.щты|щты<.>
  gramm: aux
  gloss: AUX|AUX
  regex-next: ^[.,<>0-9]*н.*
 -flex: <0>.щты|щт<.>//<0>.щты|щты<.>
  gramm: aux,fut
  gloss: AUX|FUT
  regex-next: ^[.,<>0-9]*([^н.,<>0-9].*|$)
 -flex: <0>.шъу<.>
  gramm: pot
  gloss: POT
 -flex: <0>.шъу|щты<.>//<0>.шъу|щт<.>
  gramm: pot,fut
  gloss: POT|FUT
  regex-next: ^[.,<>0-9]*([^н.,<>0-9].*|$)
 -flex: <0>.шъу|щты<.>//<0>.шъу|щт<.>
  gramm: pot,aux
  gloss: POT|AUX
  regex-next: ^[.,<>0-9]*н.*
 -flex: <0>.шъу|гъэ<.>//<0>.шъу|гъ<.>
  gramm: pot,pst
  gloss: POT|PST
 -flex: <0>.жьы|шъу<.>
  gramm: re,pot
  gloss: RE|POT
 -flex: <0>.жьы|шъу|гъэ<.>//<0>.жьы|шъу|гъ<.>
  gramm: re,pot,pst
  gloss: RE|POT|PST
 -flex: <0>.жьы<.>//<0>.жь<.>
  gramm: re
  gloss: RE
 -flex: <0>.жьы|гъ<.>//<0>.жьы|гъэ<.>
  gramm: re,pst
  gloss: RE|PST
 -flex: <0>.жьы|гъа|гъ<.>//<0>.жьы|гъа|гъэ<.>
  gramm: re,pst,pst2,alt_stem
  gloss: RE|PST|PST
 -flex: <0>.жьы|щты|гъ<.>//<0>.жьы|щты|гъэ<.>
  gramm: re,aux,pst
  gloss: RE|AUX|PST
 -flex: <0>.жьы|щты|гъа|гъ<.>//<0>.жьы|щты|гъа|гъэ<.>//<0>.жьы|щт|гъа|гъ<.>//<0>.жьы|щт|гъа|гъэ<.>
  gramm: re,aux,pst,pst2,alt_stem
  gloss: RE|AUX|PST|PST
 -flex: <0>.жьы|щт<.>//<0>.жьы|щты<.>
  gramm: re,fut
  gloss: RE|FUT
  regex-next: ^[.,<>0-9]*([^н.,<>0-9].*|$)
 -flex: <0>.жьы|щт<.>//<0>.жьы|щты<.>
  gramm: re,aux
  gloss: RE|AUX
  regex-next: ^[.,<>0-9]*н.*
 -flex: <0,1>.гъо<.>
  gramm: opt
  gloss: OPT
 -flex: <0>.гъа|гъо<.>
  gramm: pst,opt
  gloss: PST|OPT
 -flex: <0>.жьы|гъа|гъо<.>
  gramm: re,pst,opt
  gloss: RE|PST|OPT
 -flex: <0>.гъэ|ха|гъ<.>//<0>.гъэ|ха|гъэ<.>
  gramm: pst,inc,pst2,alt_stem
  gloss: PST|INC|PST
 -flex: <0>.гъа|х<.>//<0>.гъа|хэ<.>
  gramm: pst,inc,alt_stem
  gloss: PST|INC
 -flex: <0>.хэ|щт<.>//<0>.хэ|щты<.>
  gramm: fut,inc
  gloss: INC|FUT
 -flex: .пэ<.>
  gramm: asrt
  gloss: ASRT
  regex-gramm: ^V.*$
 -flex: <0>.па<.>
  gramm: asrt,alt_stem
  gloss: ASRT
  regex-gramm: ^V*$
 -flex: <0>.па|гъ<.>//<0>.па|гъэ<.>
  gramm: asrt,pst,alt_stem
  gloss: ASRT|PST
  regex-gramm: ^V.*$
 -flex: <0>.жьы|па|гъ<.>//<0>.жьы|па|гъэ<.>
  gramm: re,asrt,pst,alt_stem
  gloss: RE|ASRT|PST
  regex-gramm: ^V.*$
 -flex: <0>.жьы|пэ<.>
  gramm: re,asrt
  gloss: RE|ASRT
  regex-gramm: ^V.*$
 -flex: <0>.къо<.>
  gramm: appr
  gloss: APPR
 -flex: <0>.къуа<.>
  gramm: appr,alt_stem
  gloss: APPR
 -flex: <0>.гъэ|къо<.>
  gramm: pst,appr
  gloss: PST|APPR
 -flex: <0>.гъэ|къуа<.>
  gramm: pst,appr,alt_stem
  gloss: PST|APPR
 -flex: <0>.гъа|къо<.>
  gramm: pst,appr,alt_stem
  gloss: PST|APPR
 paradigm: V_plus_3
 paradigm: V_plus_4
 paradigm: V_plus_5_mod
 paradigm: V_plus_5
 paradigm: additives

-paradigm: V_plus_3            # plural
 -flex: .хэ<.>//.х<.>
  gramm: pl
  gloss: PL
 paradigm: V_plus_4
 paradigm: V_plus_5_mod
 paradigm: V_plus_5
 paradigm: additives

-paradigm: V_plus_4            # dynamic and negative suffixes
 -flex: .рэ<.>
  gramm: dyn
  gloss: DYN
  regex-prev-gramm: ^(.(?!dyn))*$
 -flex: .р|эп<.>//.р|эпы<.>
  gramm: dyn,neg,neg_ep
  gloss: DYN|NEG
  regex-prev-gramm: ^(.(?!dyn))*$
 -flex: .эп<.>//.эпы<.>
  gramm: neg,neg_ep
  gloss: NEG
  regex-prev-gramm: ^(.(?!neg))*$
 -flex: .эпы|щты<.>//.эпы|щт<.>
  gramm: neg,neg_ep,aux
  gloss: NEG|AUX
  regex-prev-gramm: ^(.(?!neg))*$
 -flex: .п<.>//.пы<.>
  gramm: neg,neg_ep
  gloss: NEG
#  regex-prev: .*Iэ[<>.]*$
  regex-stem: .*[эе][<>.]*$
 -flex: .пы|щты<.>//.пы|щт<.>
  gramm: neg,neg_ep,aux
  gloss: NEG|AUX
  regex-prev: .*[ыия]Iэ[<>.]*$
 -flex: .т
  gramm: aux
  gloss: AUX
 paradigm: V_plus_5_mod
 paradigm: V_plus_5
 paradigm: additives

-paradigm: V_plus_5_mod        # modal suffix that follows other suffixes
 -flex: .н<.>//.ны<.>
  gramm: mod
  gloss: MOD
 -flex: .н|хэ<.>//.н|х<.>
  gramm: mod,pl
  gloss: MOD|PL
 paradigm: V_plus_5
 paradigm: additives

-paradigm: V_plus_5            # case
 -flex: .р<.>
  gramm: abs
  gloss: ABS
 -flex: .м<.>
  gramm: obl
  gloss: OBL
 -flex: .мэ<.>
  gramm: obl,pl
  gloss: OBL.PL
 -flex: .кIэ<.>//.кIэрэ<.>
  gramm: ins
  gloss: INS
 -flex: .кI<.>//.кIэр<.>
  gramm: ins
  gloss: INS
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .м|кIэ<.>//.м|кIэрэ<.>
  gramm: obl,ins
  gloss: OBL|INS
 -flex: .м|кI<.>//.м|кIэр<.>
  gramm: obl,ins
  gloss: OBL|INS
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .м|рэ|кIэ<.>//.м|рэ|кIэрэ<.>
  gramm: obl,ins,coord
  gloss: OBL|COORD|INS
 -flex: .м|рэ|кI<.>//.м|рэ|кIэр<.>
  gramm: obl,ins,coord
  gloss: OBL|COORD|INS
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .эу<.>
  gramm: adv
  gloss: ADV
 -flex: .у<.>    # эта штука проверяет предыдущую непустую флексию в деривационной цепочке, а эта флексия может быть префиксом вообще
  gramm: adv
  gloss: ADV
  regex-prev: .*((?<!гъ)э|[ое])[.,<>0-9]*$
 -flex: .у<.>
  gramm: adv
  gloss: ADV
  regex-stem: .*[оеэ][.,<>0-9]*$
  regex-prev: ^(\.[^.]*\.|.*\.<\.>)$
 -flex: .м|джэ<.>
  gramm: obl,ins,dial
  gloss: OBL|INS
 -flex: .мэ<.>
  gramm: cond
  gloss: COND
 -flex: .м<.>
  gramm: cond
  gloss: COND
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .зэ<.>//.зэрэ<.>
  gramm: sim
  gloss: SIM
 -flex: .з<.>
  gramm: sim
  gloss: SIM
  regex-next: ^[.,<>0-9]*[ие].*
 -flex: .фэ<.>
  gramm: lim
  gloss: LIM
 -flex: .фэ|кIэ.//.фэ|кIэрэ.//.фэ|кI.//.фэ|кIэр.
  gramm: ins,lim
  gloss: LIM|INS
 paradigm: additives

-paradigm: V_sfx_dyn           # dynamic suffix
 -flex: .хэ<.>//.х<.>
  gramm: pl
  gloss: PL
 -flex: <0>.жьы<.>//<0>.жь<.>
  gramm: re
  gloss: RE
 -flex: <0>.жьы|хэ<.>//<0>.жьы|х<.>
  gramm: re,pl
  gloss: RE|PL
 -flex: .<.>
  gramm:
 paradigm: V_plus_5
 paradigm: additives